{"version":3,"sources":["webpack:///1.3bcf2c9081582fac6994.1.js","webpack:///./javascript/experiment.js","webpack:///./javascript/insight.js","webpack:///./javascript/commenting-callback.js"],"names":["webpackJsonp","34","module","exports","__webpack_require__","window","Experiment","root","this","call","_","m_objConfigurationPromise","retval","NinjaMode","$","Deferred","resolve","ajax","url","then","configuration","m_objConfiguration","GenerateGuid","timestamp","Date","getTime","result","replace","c","r","Math","random","floor","toString","toUpperCase","GetCookie","name","cookies","document","cookie","split","i","length","pos","indexOf","decodeURIComponent","slice","GetHashCode","input","charCodeAt","GetConfigurationAsync","GetCustomSettings","JsonDeserialize","IsEnabled","experimentName","customSettings","hasOwnProperty","Boolean","experimentSetting","experimentRatio","sessionId","hash","ex","RunCustomFilter","ExperimentFilter","Filters","error","console","log","IsEnabledAsync","IsEnabledWithCustomFilterAsync","fEnabled","content","JSON","parse","Function","SetCookie","value","options","encodeURIComponent","expires","Number","milliseconds","setTime","toUTCString","path","domain","secure","getMetaTagContent","inMTName","myMTContent","e","setMetaTagContent","inMTContent","myMetaTag","createElement","getElementsByTagName","appendChild","attr","TweakExperiment","enabled","EXP","stringify","AmbientContext","__WEBPACK_AMD_REQUIRE_ARRAY__","WedcsDependencies","customFilterDeferreds","enabledCustomFilterExpList","customFilterExperiment","push","applyExperiment","when","apply","done","36","Trace","TraceCategory","util","insight","traceError","customTags","customTagsCount","customTagsBatchSize","debugConsoleLogEnabled","debugLogMsgs","debugLog","inMsg","processWEDCSCustomEventFromArray","inArray","MscomCustomEvent","wedcsLogTimer","processAllCustomTags","clearTimeout","array","key","undefined","addNewCustomTag","setTimeout","setupUnloadTracking","bind","formatErrorObjectToWedcsArray","errorObject","isBubbled","data","substring","message","source","lineno","colno","errorSubscriber","tArray","subscribeErrors","Errors","subscribe","traceSubscriber","entry","navigationStart","performance","timing","category","perfEvent","customPerfArrary","timeStamp","join","subscribeTrace","commentSubscriber","widget","on","id","encodeURI","commentErrorHandler","reason","sidenoteSubscriber","sidenoteErrorHandler","setupLiveFyreTracking","commenting","commentPromise","getPromise","sidenotePromise","firePageFocusEventAsync","type","firePageFocusEvent","setupPageFocusTracking","prevType","fireCopyEvent","txt","setupCopyTracking","copiedText","getSelection","target","setupSearchTracking","submit","searchTerm","find","val","submittedByBtn","fireSwitcherEvent","switcher","selectedValue","setupSwitcherTracking","change","scrollArea","inName","scrollNA","scrollBot","scrollThreeQuarter","scrollHalf","scrollQuarter","currScrollArea","scrollAreaList","setCurrScrollArea","inIndex","scrollBottomElement","scrollPageHeight","viewportBottom","refreshScrollPageDimVars","tBottom","getBoundingClientRect","top","pageYOffset","body","height","innerHeight","suppressMobileEvents","fireScrollEvent","inScrollValue","fireScrollEventSync","fireScrollEventAsync","fireScrollStopEvent","eventType","checkForNAScroll","innerWidth","alteredScrollState","checkTrueFalse","event","scrollStatus","each","match","quarterCheckFire","halfCheckFire","threeQuarterCheckFire","tCurrPercent","scrollTimer","prevScrollPercent","scrollDirection","currScrollDirection","enable25on50Event","enable50on75event","processScroll","stopEvent","scrollResizeTimer","round","trigger","setupScrollTracking","addEventListener","resize","extractMetaFromAmbientContext","String","append","getPerfTiming","keys","timeInfoArr","index","elapsed","biMapping","document_id","locale","updated_at","experiment_id","original_content_git_url","original_ref_skeleton_git_url","site_name","gitcommit","ref_skeleton_gitcommit","depot_name","pagetype","translationtype","dev_langs","setupBiTags","currentLocale","getLanguageFromUrl","strs","msDocs","currentTheme","setupCampaignId","campaignId","subscriptionId","utilities","getParameterByName","getCookie","setCookie","isGlobalMetadataEnabled","meta","listMSMetadata","res","arr","enableWEDCS","varClickTracking","varCustomerTracking","varAutoFirePV","route","ctrl","config","loadLibrary","paths","wedcs","jsll","Asimov","clickstreamTracker","setAppId","init","ready","perfInfo","jQuery","37","__WEBPACK_AMD_DEFINE_RESULT__","deferreds","comment-init","sidenote-init","attach","handler","errorHandler","defer","promise","valueObject","reject"],"mappings":"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","file":"1.3bcf2c9081582fac6994.1.js","sourcesContent":["webpackJsonp([1,5],{\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Sample:\r\n\t    Experiment.IsEnabledAsync('experiment_name').done(function(fEnabled){\r\n\t        if (fEnabled) {\r\n\t            // do something, in case the experiment is ON for this specific session\r\n\t        } else {\r\n\t            // do something else, in case the experiment is OFF for this specific session\r\n\t        }\r\n\t    });\r\n\t*/\r\n\t\r\n\t// jshint ignore:start\r\n\twindow.Experiment = new(function(){\r\n\t    var root = (function(){return this;}).call(null);\r\n\t    var _ = this;\r\n\t\r\n\t    var m_objConfigurationPromise = (function() {\r\n\t         var retval = root.NinjaMode ? $.Deferred().resolve({}) : $.ajax({url: '/_chrome/experiment.json'});\r\n\t        retval.then(function(configuration) {\r\n\t            _.m_objConfiguration = configuration;\r\n\t        }, function() {\r\n\t            _.m_objConfiguration = null;\r\n\t        });\r\n\t        return retval;\r\n\t    })();\r\n\t\r\n\t    _.GenerateGuid = function() {\r\n\t        var timestamp = (new Date).getTime();\r\n\t        var result = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n\t            var r = (timestamp + Math.random() * 16) % 16 | 0;\r\n\t            timestamp = Math.floor(timestamp / 16);\r\n\t            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n\t        });\r\n\t        return result.toUpperCase();\r\n\t    };\r\n\t\r\n\t    _.GetCookie = function(name) {\r\n\t        var cookies = root.document.cookie ? root.document.cookie.split('; ') : [];\r\n\t        for (var i = 0; i < cookies.length; i++) {\r\n\t            var pos = cookies[i].indexOf('=');\r\n\t            if (name === root.decodeURIComponent(cookies[i].slice(0, pos)))\r\n\t            {\r\n\t                var cookie = cookies[i].slice(pos + 1).replace(/\\+/g, ' ');\r\n\t                cookie = root.decodeURIComponent(cookie);\r\n\t                return cookie;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    _.GetHashCode = function(input) {\r\n\t        var result = 0;\r\n\t        if (input) {\r\n\t            for (var i = 0; i < input.length; i++) {\r\n\t                var c = input.charCodeAt(i);\r\n\t                result = ((result << 5) - result) + c;\r\n\t                result = result & result;\r\n\t            }\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    _.GetConfigurationAsync = function() {\r\n\t        if (_.m_objConfiguration) {\r\n\t            return $.Deferred().resolve(_.m_objConfiguration);\r\n\t        }\r\n\t        return m_objConfigurationPromise;\r\n\t    };\r\n\t\r\n\t    _.GetCustomSettings = function() {\r\n\t        var result = _.GetCookie('EXP');\r\n\t        result = result && _.JsonDeserialize(result);\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    _.IsEnabled = function(experimentName, configuration) {\r\n\t        try {\r\n\t            var customSettings = _.GetCustomSettings();\r\n\t            if (customSettings && customSettings.hasOwnProperty(experimentName)) {\r\n\t                return Boolean(customSettings[experimentName]);\r\n\t            }\r\n\t            if (!configuration) {\r\n\t                return false;\r\n\t            }\r\n\t            var experimentSetting = configuration[experimentName];\r\n\t            if (experimentSetting) {\r\n\t                if (experimentSetting.hasOwnProperty('enabled') && !experimentSetting['enabled']) {\r\n\t                    return false;\r\n\t                }\r\n\t                var experimentRatio = experimentSetting['ratio'];\r\n\t                if (experimentRatio <= 0)\r\n\t                {\r\n\t                    return false;\r\n\t                }\r\n\t                if (experimentRatio >= 100)\r\n\t                {\r\n\t                    return true;\r\n\t                }\r\n\t                var sessionId = _.GetCookie('SID');\r\n\t                if (!sessionId) {\r\n\t                    return false;\r\n\t                }\r\n\t                var hash = _.GetHashCode(sessionId + ':' + experimentName);\r\n\t                if (hash === -2147483648)\r\n\t                {\r\n\t                    hash = 0;\r\n\t                }\r\n\t                if (hash < 0)\r\n\t                {\r\n\t                    hash = -hash;\r\n\t                }\r\n\t                return hash < root.Math.floor(2147483647 / 100) * experimentRatio;\r\n\t            }\r\n\t        } catch (ex) {\r\n\t            // do nothing\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t\r\n\t    _.RunCustomFilter = function (experimentName) {\r\n\t        try {\r\n\t            if (window.ExperimentFilter.Filters[experimentName]) {\r\n\t                return window.ExperimentFilter.Filters[experimentName]();\r\n\t            }\r\n\t            return $.Deferred().resolve(false);\r\n\t        } catch (error) {\r\n\t            console.log(error);\r\n\t        }\r\n\t        return $.Deferred().resolve(false);\r\n\t    }\r\n\t\r\n\t    _.IsEnabledAsync = function(experimentName) {\r\n\t        return _.GetConfigurationAsync().then(function(configuration) {\r\n\t            return $.Deferred().resolve(_.IsEnabled(experimentName, configuration));\r\n\t        }, function() {\r\n\t            return $.Deferred().resolve(_.IsEnabled(experimentName));\r\n\t        });\r\n\t    };\r\n\t    \r\n\t    _.IsEnabledWithCustomFilterAsync = function (experimentName) {\r\n\t        return _.IsEnabledAsync(experimentName).then(function (fEnabled) {\r\n\t            if (fEnabled) {\r\n\t                return _.RunCustomFilter(experimentName);\r\n\t            }\r\n\t            else {\r\n\t                return $.Deferred().resolve(false);\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t\r\n\t    _.JsonDeserialize = function(content) {\r\n\t        return root.JSON && root.JSON.parse ? root.JSON.parse(content) : (new Function('return (' + content + ')'))();\r\n\t    };\r\n\t\r\n\t    _.SetCookie = function(name, value, options) {\r\n\t        var cookie = root.encodeURIComponent(name) + '=' + root.encodeURIComponent(value);\r\n\t        options = options || {};\r\n\t\r\n\t        if (typeof options.expires === 'number' || options.expires instanceof Number) {\r\n\t            var milliseconds = options.expires * 3600 * 1000;\r\n\t            options.expires = new Date();\r\n\t            options.expires.setTime(Number(options.expires) + milliseconds);\r\n\t        }\r\n\t\r\n\t        if (options.expires) {\r\n\t            cookie += '; expires=' + options.expires.toUTCString();\r\n\t        }\r\n\t        if (options.path) {\r\n\t            cookie += '; path=' + options.path;\r\n\t        }\r\n\t        if (options.domain) {\r\n\t            cookie += '; domain=' + options.domain;\r\n\t        }\r\n\t        if (options.secure) {\r\n\t            cookie += '; secure';\r\n\t        }\r\n\t        return root.document.cookie = cookie;\r\n\t    };\r\n\t\r\n\t    _.getMetaTagContent = function (inMTName) {\r\n\t        try {\r\n\t            var myMTContent = $(\"meta[name='\" + inMTName + \"']\");\r\n\t            if (myMTContent && myMTContent.length > 0) {\r\n\t                myMTContent = myMTContent[myMTContent.length - 1].content;\r\n\t            } else {\r\n\t                myMTContent = null;\r\n\t            }\r\n\t            return myMTContent;\r\n\t        } catch (e) {\r\n\t            console.log(e);\r\n\t            return null;\r\n\t        }\r\n\t    };\r\n\t\r\n\t    _.setMetaTagContent = function (inMTName, inMTContent) {\r\n\t        if (!inMTContent) {\r\n\t            console.log(\"FALSE inMTContent found.\");\r\n\t            return;\r\n\t        }\r\n\t        if (_.getMetaTagContent(inMTName) === null) {\r\n\t            var myMetaTag = document.createElement(\"meta\");\r\n\t            myMetaTag.name = inMTName;\r\n\t            myMetaTag.content = inMTContent;\r\n\t            document.getElementsByTagName(\"head\")[0].appendChild(myMetaTag);\r\n\t        } else {\r\n\t            $(\"meta[name='\" + inMTName + \"']\").attr(\"content\", inMTContent);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    if (!_.GetCookie('SID')) {\r\n\t        _.SetCookie('SID', _.GenerateGuid(), {expires: 24 /* hours */, path: '/'});\r\n\t    }\r\n\t\r\n\t    _.TweakExperiment = function(name, enabled) {\r\n\t        var EXP = _.GetCookie('EXP');\r\n\t        EXP = EXP ? _.JsonDeserialize(EXP) : {};\r\n\t        EXP[name] = Boolean(enabled);\r\n\t        _.SetCookie('EXP', JSON.stringify(EXP), {path: '/'});\r\n\t    };\r\n\t\r\n\t    try {\r\n\t        root.AmbientContext = _.GetCookie('AmbientContext');\r\n\t        root.AmbientContext = root.AmbientContext && _.JsonDeserialize(root.AmbientContext);\r\n\t    } catch(ex) {\r\n\t    } finally {\r\n\t        root.AmbientContext = root.AmbientContext || {};\r\n\t        root.AmbientContext['EXP'] = _.GetCustomSettings();\r\n\t        root.AmbientContext['SID'] = _.GetCookie('SID');\r\n\t    }\r\n\t\r\n\t    __webpack_require__.e/* require */(2, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(35)]; (function () {\r\n\t        if (!window.WedcsDependencies) {\r\n\t            window.WedcsDependencies = [];\r\n\t        }\r\n\t\r\n\t        var customFilterDeferreds = [];\r\n\t        var enabledCustomFilterExpList = [];\r\n\t        \r\n\t        for (var customFilterExperiment in window.ExperimentFilter.Filters) {\r\n\t            if (window.ExperimentFilter.Filters.hasOwnProperty(customFilterExperiment)) {\r\n\t                customFilterDeferreds.push( _.IsEnabledAsync(customFilterExperiment).then(function (fEnabled) {\r\n\t                    if (fEnabled) {\r\n\t                        customFilterDeferreds.push(_.RunCustomFilter(customFilterExperiment).then(function (applyExperiment) {\r\n\t                            if (applyExperiment) {\r\n\t                                enabledCustomFilterExpList.push(customFilterExperiment);\r\n\t                            }\r\n\t                        }));\r\n\t                    }\r\n\t                }));\r\n\t            }\r\n\t        }\r\n\t\r\n\t        window.WedcsDependencies.push($.when.apply($, customFilterDeferreds).done(function () {\r\n\t            if (enabledCustomFilterExpList.length > 0) {\r\n\t                _.setMetaTagContent(\"ms.experimentalexp\", enabledCustomFilterExpList.toString());\r\n\t            }\r\n\t        }));\r\n\t    }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});\r\n\t})();\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function(){\r\n\t    \"use strict\";\r\n\t\r\n\t    var Trace = __webpack_require__(3),\r\n\t        TraceCategory = Trace.TraceCategory;\r\n\t    var util = __webpack_require__(29);\r\n\t    var perfEvents = __webpack_require__(21);\r\n\t\r\n\t    if (window.insight) {\r\n\t        Trace.traceError(\"insight.js is loaded more than once.\");\r\n\t        return;\r\n\t    }\r\n\t    var insight = {};\r\n\t    var customTags = {};\r\n\t    var customTagsCount = 0;\r\n\t    var customTagsBatchSize = 6;\r\n\t\r\n\t    insight.debugConsoleLogEnabled = false;\r\n\t    insight.debugLogMsgs = [];\r\n\t    insight.debugLog = function (inMsg) {\r\n\t        insight.debugLogMsgs.push(inMsg);\r\n\t        if (insight.debugConsoleLogEnabled) {\r\n\t            console.log(inMsg);\r\n\t        }\r\n\t    };\r\n\t    insight.getMetaTagContent = function (inMTName) {\r\n\t        try {\r\n\t            var myMTContent = $(\"meta[name='\" + inMTName + \"']\");\r\n\t            if (myMTContent && myMTContent.length > 0) {\r\n\t                myMTContent = myMTContent[myMTContent.length - 1].content;\r\n\t            } else {\r\n\t                myMTContent = null;\r\n\t            }\r\n\t            return myMTContent;\r\n\t        } catch (e) {\r\n\t            Trace.traceError(\"getMetaTagContent failed.\", e);\r\n\t            return null;\r\n\t        }\r\n\t    };\r\n\t    insight.setMetaTagContent = function (inMTName, inMTContent) {\r\n\t        if (!inMTContent) {\r\n\t            Trace.traceError(\"FALSE inMTContent found.\");\r\n\t            return;\r\n\t        }\r\n\t        if (insight.getMetaTagContent(inMTName) === null) {\r\n\t            var myMetaTag = document.createElement(\"meta\");\r\n\t            myMetaTag.name = inMTName;\r\n\t            myMetaTag.content = inMTContent;\r\n\t            document.getElementsByTagName(\"head\")[0].appendChild(myMetaTag);\r\n\t        } else {\r\n\t            $(\"meta[name='\" + inMTName + \"']\").attr(\"content\", inMTContent);\r\n\t        }\r\n\t    };\r\n\t    //Common function to fire custom event on clicked element\r\n\t    insight.processWEDCSCustomEventFromArray = function (inArray) {\r\n\t        if (typeof window.MscomCustomEvent !== \"function\") {\r\n\t            return;\r\n\t        } else if (!inArray || inArray.length === 0) {\r\n\t            window.MscomCustomEvent();\r\n\t            return;\r\n\t        }\r\n\t        window.MscomCustomEvent.apply(this, inArray);\r\n\t    };\r\n\t    ////////////////////// BATCH CUSTOM TAG PROCESSING\r\n\t    var wedcsLogTimer = 0;\r\n\t    insight.processAllCustomTags = function () {\r\n\t\r\n\t        customTagsCount = 0;\r\n\t        if (wedcsLogTimer) {\r\n\t            window.clearTimeout(wedcsLogTimer);\r\n\t            wedcsLogTimer = 0;\r\n\t        }\r\n\t\r\n\t        var array = [];\r\n\t        for (var key in customTags) {\r\n\t            if (customTags[key]) {\r\n\t                array.push(key, customTags[key]);\r\n\t                customTags[key] = undefined;\r\n\t            }\r\n\t        }\r\n\t        if (array.length > 0) {\r\n\t            insight.processWEDCSCustomEventFromArray(array);\r\n\t        }\r\n\t    };\r\n\t    // Value will be appended if the key already exists, split by \";\". So \";\" is not allowed in value.\r\n\t    insight.addNewCustomTag = function (key, value) {\r\n\t        if (customTags[key]) {\r\n\t            customTags[key] += \";\" + value;\r\n\t        } else {\r\n\t            customTags[key] = value;\r\n\t        }\r\n\t        customTagsCount ++;\r\n\t        // Process immediately if there are customTagsBatchSize events\r\n\t        if (customTagsCount >= customTagsBatchSize) {\r\n\t            insight.processAllCustomTags();\r\n\t        } else if (!wedcsLogTimer) {\r\n\t            wedcsLogTimer = window.setTimeout(function (){\r\n\t                insight.processAllCustomTags();\r\n\t            }, 1000 * 20);\r\n\t        }\r\n\t    };\r\n\t    insight.setupUnloadTracking = function () {\r\n\t        $(window).bind(\"beforeunload\", function(){\r\n\t            insight.processAllCustomTags();\r\n\t        });\r\n\t    };\r\n\t    ////////////////////// ERROR RELATED\r\n\t    var formatErrorObjectToWedcsArray = function (errorObject) {\r\n\t        var array = [];\r\n\t        if (!errorObject) {\r\n\t            return array;\r\n\t        }\r\n\t\r\n\t        if (errorObject.error) {\r\n\t            if (errorObject.isBubbled) {\r\n\t                if (errorObject.error.data) {\r\n\t                    array.push(\"ms.error\", JSON.stringify(errorObject.error.data).substring(0, 100));\r\n\t                }\r\n\t            } else {\r\n\t                array.push(\"ms.error\", errorObject.error.toString().substring(0, 100));\r\n\t            }\r\n\t        }\r\n\t        if (errorObject.message) {\r\n\t            array.push(\"ms.errormsg\", errorObject.message.substring(0, 30));\r\n\t        }\r\n\t        if (errorObject.source) {\r\n\t            array.push(\"ms.errorsrc\", errorObject.source);\r\n\t        }\r\n\t        if (errorObject.lineno) {\r\n\t            array.push(\"ms.errorlineno\", errorObject.lineno);\r\n\t        }\r\n\t        if (errorObject.colno) {\r\n\t            array.push(\"ms.errorcolno\", errorObject.colno);\r\n\t        }\r\n\t        return array;\r\n\t    };\r\n\t    var errorSubscriber = function (errorObject) {\r\n\t        try {\r\n\t            var tArray = formatErrorObjectToWedcsArray(errorObject);\r\n\t            if (tArray.length > 0) {\r\n\t                insight.processWEDCSCustomEventFromArray(tArray);\r\n\t            }\r\n\t        } catch (ex) {\r\n\t            if (window.console) {\r\n\t                console.error(ex.toString());\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    insight.subscribeErrors = function () {\r\n\t        var Errors = __webpack_require__(4);\r\n\t        Errors.subscribe(errorSubscriber);\r\n\t    };\r\n\t    ////////////////////// Subscribe Trace\r\n\t    var traceSubscriber = function (entry) {\r\n\t        if (!entry) {\r\n\t            return;\r\n\t        }\r\n\t        var navigationStart = window.performance.timing.navigationStart;\r\n\t        if (typeof navigationStart !== \"number\") {\r\n\t            return;\r\n\t        }\r\n\t        if (entry.category === TraceCategory.performance) {\r\n\t            var perfEvent = entry.data;\r\n\t\r\n\t            var customPerfArrary = [];\r\n\t            customPerfArrary.push(perfEvent.name, perfEvent.timeStamp.getTime() - navigationStart);\r\n\t\r\n\t            var array = [];\r\n\t            array.push(\"ms.cus.perf.timing\", customPerfArrary.join());\r\n\t            insight.processWEDCSCustomEventFromArray(array);\r\n\t        }\r\n\t    };\r\n\t    insight.subscribeTrace = function () {\r\n\t        Trace.subscribe(traceSubscriber);\r\n\t    };\r\n\t    ////////////////////// Comment Related\r\n\t    var commentSubscriber = function (widget) {\r\n\t        widget.on(\"commentPosted\", function (data) {\r\n\t            if (data && data.id) {\r\n\t                var array = [];\r\n\t                array.push(\"ms.commentid\", encodeURI(data.id));\r\n\t                array.push(\"ms.commentdt\", new Date().getTime());\r\n\t                array.push(\"ms.commentet\", \"commentPosted\");\r\n\t                insight.processWEDCSCustomEventFromArray(array);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    var commentErrorHandler = function (reason) {\r\n\t        Trace.traceError(\"comment loading failure\", reason);\r\n\t        var array = [];\r\n\t        array.push(\"ms.commenter\", encodeURI(JSON.stringify(reason)));\r\n\t        array.push(\"ms.commentet\", \"commentLoad\");\r\n\t        insight.processWEDCSCustomEventFromArray(array);\r\n\t    };\r\n\t    var sidenoteSubscriber = function (widget) {\r\n\t        widget.on(\"sidenotes.commentPosted\", function (data) {\r\n\t            if (data && data.id) {\r\n\t                var array = [];\r\n\t                array.push(\"ms.commentid\", encodeURI(data.id === null ? null : data.id.replace(\"@\", \"#\")));\r\n\t                array.push(\"ms.commentdt\", new Date().getTime());\r\n\t                array.push(\"ms.commentet\", \"sidenotePosted\");\r\n\t                insight.processWEDCSCustomEventFromArray(array);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    var sidenoteErrorHandler = function (reason) {\r\n\t        Trace.traceError(\"sidenote loading failure\", reason);\r\n\t        var array = [];\r\n\t        array.push(\"ms.commenter\", encodeURI(JSON.stringify(reason)));\r\n\t        array.push(\"ms.commentet\", \"sidenoteLoad\");\r\n\t        insight.processWEDCSCustomEventFromArray(array);\r\n\t    };\r\n\t    insight.setupLiveFyreTracking = function () {\r\n\t        var commenting = __webpack_require__(37);\r\n\t        var commentPromise = commenting.getPromise(\"comment-init\");\r\n\t        if(commentPromise) {\r\n\t            commentPromise.then(commentSubscriber, commentErrorHandler);\r\n\t        } else {\r\n\t            Trace.traceError(\"Failed to get comment promise from commenting-callback\");\r\n\t        }\r\n\t        var sidenotePromise = commenting.getPromise(\"sidenote-init\");\r\n\t        if(sidenotePromise) {\r\n\t            sidenotePromise.then(sidenoteSubscriber, sidenoteErrorHandler);\r\n\t        } else {\r\n\t            Trace.traceError(\"Failed to get sidenote promise from commenting-callback\");\r\n\t        }\r\n\t    };\r\n\t    ////////////////////// FOCUS EVENT\r\n\t    insight.firePageFocusEventAsync = function (type) {\r\n\t        insight.debugLog(\"stepped inside firePageFocusEventAsync function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"tp=\" + type);\r\n\t        tArray.push(\"dt=\" + new Date().getTime());\r\n\t        insight.addNewCustomTag(\"batch.focusevent\", tArray.join());\r\n\t    };\r\n\t    //TODO: The sync version need to be removed after backend jobs are updated\r\n\t    insight.firePageFocusEvent = function (type) {\r\n\t        insight.debugLog(\"stepped inside firePageFocusEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.focuseventtime\", new Date().getTime());\r\n\t        tArray.push(\"ms.focusorblue\", type);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t\r\n\t        insight.firePageFocusEventAsync(type);\r\n\t    };\r\n\t    insight.setupPageFocusTracking = function () {\r\n\t\r\n\t        $(window).on(\"blur focus\", function (e) {\r\n\t            var prevType = $(this).data(\"prevType\");\r\n\t\r\n\t            if (prevType !== e.type) {   //reduce double fire issues\r\n\t                switch (e.type) {\r\n\t                    case \"blur\":\r\n\t                        insight.debugLog(\"Blured\");\r\n\t                        insight.firePageFocusEvent(\"Blured\");\r\n\t                        break;\r\n\t                    case \"focus\":\r\n\t                        insight.debugLog(\"Focused\");\r\n\t                        insight.firePageFocusEvent(\"Focused\");\r\n\t                        break;\r\n\t                }\r\n\t            }\r\n\t            $(this).data(\"prevType\", e.type);\r\n\t        });\r\n\t\r\n\t    };\r\n\t    ////////////////////// COPY EVENT\r\n\t    insight.fireCopyEvent = function (txt, length) {\r\n\t        insight.debugLog(\"stepped inside fireCopyEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.copyeventtime\", new Date().getTime());\r\n\t        tArray.push(\"ms.copycontent\", txt);\r\n\t        tArray.push(\"ms.copycontentlength\", length);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.setupCopyTracking = function () {\r\n\t        $(window).bind(\"copy\", function (e, copiedText) {\r\n\t            // window.getSelection().toString(): text which is manually selected and copied with Ctrl-C or context menu\r\n\t            // copiedText: code which is copied by the copy button in IE\r\n\t            // e.target.value: code which is copied by the copy button in other browsers\r\n\t            var txt = window.getSelection().toString() || copiedText || e.target.value;\r\n\t            var length = txt.length;\r\n\t            txt = txt.substring(0, 20); //truncate to limit the length of WEDCS event\r\n\t            insight.fireCopyEvent(txt, length);\r\n\t        });\r\n\t    };\r\n\t    ////////////////////// SEARCH EVENTS\r\n\t    insight.setupSearchTracking = function () {\r\n\t        $(\"#searchForm\").submit(function (e) {            \r\n\t            var searchTerm = $(this).find(\"input[name='search']\").val();            \r\n\t            var submittedByBtn = $(this).find(\"#search:focus\").length > 0;\r\n\t\r\n\t            var tArray = [];\r\n\t            tArray.push(\"ms.search.term\", searchTerm);\r\n\t            tArray.push(\"ms.search.formSubmitType\", submittedByBtn ? 1 : 0);\r\n\t            insight.processWEDCSCustomEventFromArray(tArray);\r\n\t        });\r\n\t    };\r\n\t    ////////////////////// SWITCHER SELECTION\r\n\t    insight.fireSwitcherEvent = function (switcher, selectedValue) {\r\n\t        insight.debugLog(\"stepped inside fireSwitcherEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.switcheventtime\", new Date().getTime());\r\n\t        tArray.push(\"ms.switcher\", switcher);\r\n\t        tArray.push(\"ms.switchervalue\", selectedValue);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.setupSwitcherTracking = function () {\r\n\t        $(\"#theme-selector\").change(function () {\r\n\t            var selectedValue = $(\"#theme-selector\").val();\r\n\t            insight.fireSwitcherEvent(\"theme\", selectedValue);\r\n\t        });\r\n\t        $(\"#platform-selector\").change(function () {\r\n\t            var selectedValue = $(\"#platform-selector\").val();\r\n\t            insight.fireSwitcherEvent(\"platform\", selectedValue);\r\n\t        });\r\n\t        $(\"#lang-selector\").change(function () {\r\n\t            var selectedValue = $(\"#lang-selector\").val();\r\n\t            insight.fireSwitcherEvent(\"lang\", selectedValue);\r\n\t        });\r\n\t    };\r\n\t    ////////////////////// SCROLL TRACKING\r\n\t    //Scroll Area definition\r\n\t    insight.scrollArea = function (inName) {\r\n\t        try{\r\n\t            this.name = inName;\r\n\t            this.scrollNA = false;\r\n\t            this.scrollBot = false;\r\n\t            this.scrollThreeQuarter = false;\r\n\t            this.scrollHalf = false;\r\n\t            this.scrollQuarter = false;\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the scrollArea function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t    //Track multiple scroll areas per page\r\n\t    insight.currScrollArea = null;\r\n\t    insight.scrollAreaList = [];\r\n\t    insight.setCurrScrollArea = function (inIndex) {\r\n\t        try{\r\n\t            if (typeof inIndex !== \"number\") {\r\n\t                return;\r\n\t            } else if (insight.scrollAreaList.length <= inIndex) {\r\n\t                return;\r\n\t            }\r\n\t            insight.currScrollArea = insight.scrollAreaList[inIndex];\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the setCurrScrollArea function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t    //Page dimension variables\r\n\t    insight.scrollBottomElement = null;\r\n\t    insight.scrollPageHeight = -1;\r\n\t    insight.viewportBottom = -1;\r\n\t    insight.refreshScrollPageDimVars = function () {\r\n\t        try{\r\n\t            var tBottom = 0;\r\n\t            if (insight.scrollBottomElement) {\r\n\t                tBottom = insight.scrollBottomElement.getBoundingClientRect().top + window.pageYOffset;\r\n\t            }\r\n\t            if (tBottom <= 0) {\r\n\t                tBottom = document.body.getBoundingClientRect().height;\r\n\t            }\r\n\t            insight.scrollPageHeight = tBottom;\r\n\t            insight.viewportBottom = window.pageYOffset + window.innerHeight;\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the refreshScrollPageDimVars function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t    insight.suppressMobileEvents = false;\r\n\t    insight.fireScrollEvent = function (inScrollValue) {\r\n\t        insight.fireScrollEventSync(inScrollValue, \"scroll\");\r\n\t        insight.fireScrollEventAsync(inScrollValue, \"scroll\");\r\n\t    };\r\n\t    insight.fireScrollStopEvent = function (inScrollValue) {\r\n\t        insight.fireScrollEventSync(inScrollValue, \"scroll-stop\");\r\n\t        insight.fireScrollEventAsync(inScrollValue, \"scroll-stop\");\r\n\t    };\r\n\t    insight.fireScrollEventAsync= function (inScrollValue, eventType) {\r\n\t        insight.debugLog(\"stepped inside fireScrollEventAsync function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"scnum=scroll-\" + inScrollValue);\r\n\t        tArray.push(\"scn=\" + eventType);\r\n\t        tArray.push(\"dt=\" + new Date().getTime());\r\n\t        insight.addNewCustomTag(\"batch.scrollevent\", tArray.join());\r\n\t    };\r\n\t    insight.fireScrollEventSync = function (inScrollValue, eventType) {\r\n\t        insight.debugLog(\"stepped inside fireScrollEvent function\");\r\n\t        var tArray = [];\r\n\t        tArray.push(\"ms.pgarea\", \"body\");\r\n\t        tArray.push(\"ms.scnum\", \"scroll-\" + inScrollValue);\r\n\t        tArray.push(\"ms.interactiontype\", \"4\");\r\n\t        tArray.push(\"ms.scn\", eventType);\r\n\t        insight.processWEDCSCustomEventFromArray(tArray);\r\n\t    };\r\n\t    insight.checkForNAScroll = function () {\r\n\t        try{\r\n\t            insight.refreshScrollPageDimVars();\r\n\t            if (insight.scrollPageHeight <= 0) {\r\n\t                return;\r\n\t            } else if (insight.suppressMobileEvents && window.innerWidth <= 510) {\r\n\t                return;\r\n\t            }\r\n\t            if (window.innerHeight > insight.scrollPageHeight * 0.90) {\r\n\t                //Visitor can see the whole page, fire special -na event\r\n\t                insight.currScrollArea.scrollNA = true;\r\n\t                insight.fireScrollEvent(\"na\");\r\n\t            } else {\r\n\t                insight.fireScrollEvent(\"0%\");\r\n\t            }\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the checkForNAScroll function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    var alteredScrollState;\r\n\t\r\n\t    insight.checkTrueFalse = function(key, value){\r\n\t        try{\r\n\t            if(value){\r\n\t            insight.scrollAreaList[0][key] = false;  //update the scroll benchmark value from true to false so events can fire again\r\n\t            return true;\r\n\t            }else{\r\n\t                return false;\r\n\t            }\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the checkTrueFalse function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    $(window).on(\"scrollDirectionStatus\", function(event, scrollStatus){\r\n\t        try{\r\n\t            insight.debugLog(\"inside scrollDirectionStatus listener\");\r\n\t            $.each(insight.scrollAreaList[0], function(key, value) {\r\n\t                if (insight.scrollAreaList[0].hasOwnProperty(key)) {\r\n\t                    if(key.match(/scroll/i) && !key.match(/NA/)){   //only benchmarks we want to alter; .25, .50, .75, and 1\r\n\t                        alteredScrollState = insight.checkTrueFalse(key, value);\r\n\t                        if(alteredScrollState){\r\n\t                            insight.debugLog(\"changed value in alteredScrollState. key: \" + key);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the scrollDirectionStatus listener function. Error: \" + e);\r\n\t        }\r\n\t    });\r\n\t\r\n\t    insight.quarterCheckFire = function(){\r\n\t        try{\r\n\t            if(!insight.currScrollArea.scrollQuarter){\r\n\t                insight.currScrollArea.scrollQuarter = true;\r\n\t                insight.fireScrollEvent(\"25%\");\r\n\t            }\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the quarterCheckFire function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    insight.halfCheckFire = function(){\r\n\t        try{\r\n\t            if(!insight.currScrollArea.scrollHalf){\r\n\t                insight.currScrollArea.scrollHalf = true;\r\n\t                insight.fireScrollEvent(\"50%\");\r\n\t            }\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the halfCheckFire function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    insight.threeQuarterCheckFire = function(){\r\n\t        try{\r\n\t            if(!insight.currScrollArea.scrollThreeQuarter){\r\n\t                insight.currScrollArea.scrollThreeQuarter = true;\r\n\t                insight.fireScrollEvent(\"75%\");\r\n\t            }\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the threeQuarterCheckFire function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t    var scrollTimer = 0;\r\n\t    var prevScrollPercent = 0, scrollDirection = \"down\", currScrollDirection = \"down\", tCurrPercent;\r\n\t    var enable25on50Event = false;\r\n\t    var enable50on75event = false;\r\n\t    insight.processScroll = function (stopEvent) {\r\n\t        try{\r\n\t            if (!stopEvent) {\r\n\t                window.clearTimeout(scrollTimer);\r\n\t                scrollTimer = window.setTimeout(function () {\r\n\t                    insight.processScroll(true);\r\n\t                }, 1000 * 10);\r\n\t\r\n\t                window.clearTimeout(insight.scrollResizeTimer);\r\n\t            }\r\n\t\r\n\t            if (insight.currScrollArea === null) {\r\n\t                return;\r\n\t            }\r\n\t            insight.refreshScrollPageDimVars();\r\n\t            if (insight.scrollPageHeight <= 0) {\r\n\t                return;\r\n\t            } else if (insight.suppressMobileEvents && window.innerWidth <= 510) {\r\n\t                return;\r\n\t            }\r\n\t            //find current scroll percentage of the page\r\n\t            tCurrPercent = insight.viewportBottom / insight.scrollPageHeight;\r\n\t\r\n\t            if (stopEvent === true) {\r\n\t                if (tCurrPercent > 0.99) {\r\n\t                    tCurrPercent = 1.0;\r\n\t                }\r\n\t                insight.fireScrollStopEvent(Math.round(tCurrPercent * 100) + \"%\");\r\n\t                return;\r\n\t            }\r\n\t\r\n\t            //check for a non-scrollable page; fire scroll n/a if true\r\n\t            if (window.innerHeight > insight.scrollPageHeight * 0.90) {\r\n\t                //Visitor can see the whole page, fire special -na event\r\n\t                if (!insight.currScrollArea.scrollNA) {\r\n\t                    insight.currScrollArea.scrollNA = true;\r\n\t                    insight.fireScrollEvent(\"na\");\r\n\t                }\r\n\t                return;\r\n\t            }\r\n\t\r\n\t            //check for small page which would cut off 25% event\r\n\t            if((window.innerHeight / insight.scrollPageHeight) > 0.50){\r\n\t                enable25on50Event = true;\r\n\t            }else if((window.innerHeight / insight.scrollPageHeight) > 0.75){\r\n\t                enable50on75event = true;\r\n\t            }\r\n\t\r\n\t            //update the scroll direction based off of previous scroll percentage and current scroll percentage\r\n\t            scrollDirection = prevScrollPercent <= tCurrPercent ? \"down\" : \"up\";\r\n\t            //update the prevScrollPercent variable with the latest scroll percentage\r\n\t            prevScrollPercent = tCurrPercent;\r\n\t\r\n\t            try{\r\n\t                if(currScrollDirection !== scrollDirection){\r\n\t                    //change all scroll benchmarks to false if they have already fired\r\n\t                    //we want to be able to capture the scroll benchmark event again if the user has changed scroll direction\r\n\t                    $(window).trigger(\"scrollDirectionStatus\", [\"changed\"]);\r\n\t                }\r\n\t\r\n\t                if (tCurrPercent > 0.99) {\r\n\t                    if(!insight.currScrollArea.scrollBot){\r\n\t                        insight.currScrollArea.scrollBot = true;\r\n\t                        insight.fireScrollEvent(\"100%\");\r\n\t                    }\r\n\t                }else if (tCurrPercent > 0.75) {\r\n\t                    if(enable50on75event){  //user on a small page that will never reach the 25% or 50% benchmark; send 25%, 50% event with 75% conditional\r\n\t                        if(scrollDirection === \"down\"){ //maintain order for timestamp purposes\r\n\t                            insight.quarterCheckFire();\r\n\t                            insight.halfCheckFire();\r\n\t                            insight.threeQuarterCheckFire();\r\n\t                        }else{\r\n\t                            insight.threeQuarterCheckFire();\r\n\t                            insight.halfCheckFire();\r\n\t                            insight.quarterCheckFire();\r\n\t                        }\r\n\t                    }else{\r\n\t                        insight.threeQuarterCheckFire();\r\n\t                    }\r\n\t                }else if (tCurrPercent > 0.50) {\r\n\t                    if(enable25on50Event){  //user on a small page that will never reach the 25% benchmark; send 25% event with 50% conditional\r\n\t                        if(scrollDirection === \"down\"){ //maintain order for timestamp purposes\r\n\t                            insight.quarterCheckFire();\r\n\t                            insight.halfCheckFire();\r\n\t                        }else{\r\n\t                            insight.halfCheckFire();\r\n\t                            insight.quarterCheckFire();\r\n\t                        }\r\n\t                    }else{\r\n\t                        insight.halfCheckFire();\r\n\t                    }\r\n\t                }else if (tCurrPercent > 0.25) {\r\n\t                    insight.quarterCheckFire();\r\n\t                }\r\n\t            }catch(e){\r\n\t                Trace.traceError(\"Error in the scroll benchmark conditionals. Raw error: \" + e);\r\n\t            }\r\n\t            currScrollDirection = scrollDirection;\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the processScroll function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t    insight.scrollResizeTimer = 0;\r\n\t    insight.setupScrollTracking = function () {\r\n\t        try{\r\n\t            insight.scrollBottomElement = $(\"footer:first\")[0];\r\n\t            insight.scrollAreaList.push(new insight.scrollArea(\"body\"));\r\n\t            insight.setCurrScrollArea(0);\r\n\t            window.addEventListener(\"scroll\", function () {\r\n\t                insight.processScroll();\r\n\t            });\r\n\t            scrollTimer = window.setTimeout(function () {\r\n\t                insight.processScroll(true);\r\n\t            }, 1000 * 10);\r\n\t            //Note: resize also catches zoom in/out\r\n\t            $(window).resize(function () {\r\n\t                window.clearTimeout(insight.scrollResizeTimer);\r\n\t                insight.scrollResizeTimer = window.setTimeout(function () {\r\n\t                    insight.processScroll();\r\n\t                }, 500);\r\n\t            });\r\n\t            //fire 0% scroll or n/a scroll depending on window height\r\n\t            insight.checkForNAScroll();\r\n\t        }catch(e){\r\n\t            Trace.traceError(\"Error in the setupScrollTracking function. Error: \" + e);\r\n\t        }\r\n\t    };\r\n\t    insight.extractMetaFromAmbientContext = function () {\r\n\t        if (window.AmbientContext) {\r\n\t            for (var key in window.AmbientContext) {\r\n\t                if (window.AmbientContext.hasOwnProperty(key)) {\r\n\t                    var content = window.AmbientContext[key];\r\n\t                    if (content) {\r\n\t                        if (!(typeof(content) === \"string\" || content instanceof String)) {\r\n\t                            content = JSON.stringify(content);\r\n\t                        }\r\n\t                    }\r\n\t                    $(\"head\").append(\"<meta name='ms.\" + encodeURI(key.replace(\".\", \"_\")) +\r\n\t                        \"' content='\" + encodeURI(content) + \"' />\");\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    insight.getPerfTiming = function () {\r\n\t        if (!window.performance || !window.performance.timing) {\r\n\t            return null;\r\n\t        }\r\n\t        var navigationStart = window.performance.timing.navigationStart;\r\n\t        if (typeof navigationStart !== \"number\") {\r\n\t            return null;\r\n\t        }\r\n\t        //Navigation timing attributes, ref: https://w3c.github.io/navigation-timing/\r\n\t        var keys = [\"redirectStart\", \"redirectEnd\", \"fetchStart\", \"connectStart\", \"connectEnd\", \"requestStart\", \"responseStart\",\r\n\t                    \"responseEnd\", \"domLoading\", \"domInteractive\", \"domContentLoadedEventStart\", \"domContentLoadedEventEnd\",\r\n\t                    \"domComplete\", \"loadEventStart\", \"loadEventEnd\"];\r\n\t        var timeInfoArr = [];\r\n\t        for (var index = 0; index < keys.length; index++) {\r\n\t            var key = keys[index];\r\n\t            if (typeof window.performance.timing[key] !== \"number\") {\r\n\t                timeInfoArr.push(\"\");\r\n\t            } else {\r\n\t                var elapsed = window.performance.timing[key] !== 0 ? window.performance.timing[key] - navigationStart : \"\";\r\n\t                timeInfoArr.push(elapsed);\r\n\t            }\r\n\t        }\r\n\t        return timeInfoArr.join();\r\n\t    };\r\n\t    var biMapping = {\r\n\t        \"document_id\": \"ms.documentid\",\r\n\t        \"locale\": \"ms.contentlang\",\r\n\t        \"updated_at\": \"ms.publishtime\",\r\n\t        \"experiment_id\": \"ms.experimentid\",\r\n\t        \"original_content_git_url\": \"ms.giturl\",\r\n\t        \"original_ref_skeleton_git_url\": \"ms.gitsourceurl\",\r\n\t        \"site_name\": \"ms.sitename\",\r\n\t        \"gitcommit\": \"ms.gitcommit\",\r\n\t        \"ref_skeleton_gitcommit\": \"ms.gitsourcecommit\",\r\n\t        \"depot_name\": \"ms.depotname\",\r\n\t        \"pagetype\": \"ms.opspagetype\",\r\n\t        \"translationtype\": \"ms.translationtype\",\r\n\t        \"dev_langs\": \"ms.devlang\"\r\n\t    };\r\n\t    insight.setupBiTags = function () {\r\n\t        for (var key in biMapping) {\r\n\t            var content = insight.getMetaTagContent(key);\r\n\t            if (content !== null) {\r\n\t                insight.setMetaTagContent(biMapping[key], content);\r\n\t            }\r\n\t        }\r\n\t        var locale = __webpack_require__(7);\r\n\t        var currentLocale = locale.getLanguageFromUrl();\r\n\t        insight.setMetaTagContent(\"ms.locale\", encodeURI(currentLocale));\r\n\t\r\n\t        //add ms.lang and ms.loc if not exist\r\n\t        if (currentLocale) {\r\n\t            var strs = currentLocale.split(\"-\");\r\n\t            if (insight.getMetaTagContent(\"ms.lang\") === null) {\r\n\t                insight.setMetaTagContent(\"ms.lang\", encodeURI(strs[0]));\r\n\t            }\r\n\t            if (insight.getMetaTagContent(\"ms.loc\") === null) {\r\n\t                insight.setMetaTagContent(\"ms.loc\", strs.length > 1 ? encodeURI(strs[1]) : \"\");\r\n\t            }\r\n\t        }\r\n\t\r\n\t        //add meta tag for theme\r\n\t        if (msDocs.data.currentTheme && (msDocs.data.currentTheme === 'light' || msDocs.data.currentTheme === 'dark' )) {\r\n\t            if (insight.getMetaTagContent(\"ms.theme\") === null) {\r\n\t                insight.setMetaTagContent(\"ms.theme\", msDocs.data.currentTheme);\r\n\t            }\r\n\t        }\r\n\t        \r\n\t        //depot_name is an OP specific metadata, if it exists while ms.contentsource tag is missing, pick it up\r\n\t        //Insight team relies on ms.contentsource to find out all OP pages from WEDCS ocean\r\n\t        if (insight.getMetaTagContent(\"depot_name\") !== null &&\r\n\t                insight.getMetaTagContent(\"ms.contentsource\") === null) {\r\n\t            insight.setMetaTagContent(\"ms.contentsource\", \"OP\");\r\n\t        }\r\n\t    };\r\n\t    insight.setupCampaignId = function() {\r\n\t        var utilities = __webpack_require__(17);\r\n\t        var cookies = __webpack_require__(5);\r\n\t\r\n\t        var campaignId;\r\n\t        var subscriptionId;\r\n\t        if ((campaignId = utilities.getParameterByName(\"utm_campaign\"))) {\r\n\t            subscriptionId = utilities.getParameterByName(\"subscriptionId\");\r\n\t        } else if ((campaignId = utilities.getParameterByName(\"WT.mc_id\"))) {\r\n\t            // subscription ID only belongs to utm_campaign\r\n\t            subscriptionId = null;\r\n\t        } else {\r\n\t            campaignId = cookies.getCookie(\"cpnid\");\r\n\t            subscriptionId = cookies.getCookie(\"subid\");\r\n\t        }\r\n\t\r\n\t        if (campaignId) {\r\n\t            // set the cookie to expire after half an hour\r\n\t            cookies.setCookie(\"cpnid\", campaignId, { expires: (0.5 / 24), domain: \".microsoft.com\" });\r\n\t            // add campaign ID to meta so it can be sent along with the PV event\r\n\t            insight.setMetaTagContent(\"ms.cpnid\", campaignId);\r\n\t        }\r\n\t\r\n\t        if (subscriptionId) {\r\n\t            // set the cookie to expire after half an hour\r\n\t            cookies.setCookie(\"subid\", subscriptionId, { expires: (0.5 / 24), domain: \".microsoft.com\" });\r\n\t            // add subscription ID to meta so it can be sent along with the PV event\r\n\t            insight.setMetaTagContent(\"ms.subid\", subscriptionId);\r\n\t        } else {\r\n\t            // if subscription ID is null, delete the cookie\r\n\t            cookies.setCookie(\"subid\", subscriptionId, { expires: \"Thu, 01 Jan 1970 00:00:01 GMT\", domain: \".microsoft.com\" });\r\n\t        }\r\n\t    };\r\n\t    insight.isGlobalMetadataEnabled = function (meta) {\r\n\t        if (insight.getMetaTagContent(meta) !== null) {\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    insight.listMSMetadata = function () {\r\n\t        var res = [];\r\n\t        var arr = $(\"meta[name^='ms.']\");\r\n\t        for (var i = 0; i < arr.length; i++) {\r\n\t            res.push(arr[i].name);\r\n\t        }\r\n\t        return res.join(\", \");\r\n\t    };\r\n\t    insight.enableWEDCS = function () {\r\n\t        //WEDCS base settings\r\n\t        window.varClickTracking = 1;\r\n\t        window.varCustomerTracking = 0;\r\n\t        window.varAutoFirePV = 1;\r\n\t        window.route = \"\";\r\n\t        window.ctrl = \"\";\r\n\t\r\n\t        __webpack_require__.e/* require */(3, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(14)]; (function(config){\r\n\t            util.loadLibrary(config.paths.wedcs).then(function () {\r\n\t                insight.subscribeErrors();\r\n\t                insight.subscribeTrace();\r\n\t                insight.setupPageFocusTracking();\r\n\t                insight.setupScrollTracking();\r\n\t                insight.setupCopyTracking();\r\n\t                insight.setupSearchTracking();\r\n\t                insight.setupSwitcherTracking();\r\n\t                insight.setupLiveFyreTracking();\r\n\t                insight.setupUnloadTracking();\r\n\t            });\r\n\t\r\n\t            //Expose $ and jQuery, JSLL need them\r\n\t            __webpack_require__(38);\r\n\t            util.loadLibrary(config.paths.jsll).then(function () {\r\n\t                window.Asimov.clickstreamTracker.setAppId(\"docs\");\r\n\t                window.Asimov.clickstreamTracker.init();\r\n\t            });\r\n\t\r\n\t        }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});\r\n\t\r\n\t    };\r\n\t\r\n\t    $(document).ready(function () {\r\n\t        try {\r\n\t            insight.extractMetaFromAmbientContext();\r\n\t            insight.setupBiTags();\r\n\t            insight.setupCampaignId();\r\n\t\r\n\t            //TODO: remove following two lines after backend job is updated to use custom event instead of page view event\r\n\t            //For now, the meta should be added before load ms.js\r\n\t            var perfInfo = insight.getPerfTiming();\r\n\t            if (perfInfo) {\r\n\t                $(\"head\").append(\"<meta name='ms.perf.timing' content='\" + perfInfo + \"' />\");\r\n\t            }\r\n\t\r\n\t            //enable WEDCS after dependency promises finished or failed\r\n\t            $.when.apply($, window.WedcsDependencies).then(function () {\r\n\t                insight.enableWEDCS();\r\n\t            }, function () {\r\n\t                insight.enableWEDCS();\r\n\t            });\r\n\t        } catch (ex) {\r\n\t            Trace.traceError(ex.toString());\r\n\t        }\r\n\t    });\r\n\t    //Expose jQuery for easy debugging\r\n\t    insight.jQuery = $;\r\n\t    window.insight = insight;\r\n\t})();\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t    \"use strict\";\r\n\t\r\n\t    var deferreds = {\r\n\t        \"comment-init\": $.Deferred(),\r\n\t        \"sidenote-init\": $.Deferred()\r\n\t    };\r\n\t\r\n\t    module.exports.attach = function (type, handler, errorHandler) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            defer.promise().then(handler, errorHandler);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.exports.getPromise = function (type) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            return defer.promise();\r\n\t        }\r\n\t        return null;\r\n\t    };\r\n\t\r\n\t    module.exports.resolve = function (type, valueObject) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            defer.resolve(valueObject);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    module.exports.reject = function (type, valueObject) {\r\n\t        var defer = deferreds[type];\r\n\t        if (defer) {\r\n\t            defer.reject(valueObject);\r\n\t        }\r\n\t    };\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 1.3bcf2c9081582fac6994.1.js\n **/","/* Sample:\r\n    Experiment.IsEnabledAsync('experiment_name').done(function(fEnabled){\r\n        if (fEnabled) {\r\n            // do something, in case the experiment is ON for this specific session\r\n        } else {\r\n            // do something else, in case the experiment is OFF for this specific session\r\n        }\r\n    });\r\n*/\r\n\r\n// jshint ignore:start\r\nwindow.Experiment = new(function(){\r\n    var root = (function(){return this;}).call(null);\r\n    var _ = this;\r\n\r\n    var m_objConfigurationPromise = (function() {\r\n         var retval = root.NinjaMode ? $.Deferred().resolve({}) : $.ajax({url: '/_chrome/experiment.json'});\r\n        retval.then(function(configuration) {\r\n            _.m_objConfiguration = configuration;\r\n        }, function() {\r\n            _.m_objConfiguration = null;\r\n        });\r\n        return retval;\r\n    })();\r\n\r\n    _.GenerateGuid = function() {\r\n        var timestamp = (new Date).getTime();\r\n        var result = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = (timestamp + Math.random() * 16) % 16 | 0;\r\n            timestamp = Math.floor(timestamp / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return result.toUpperCase();\r\n    };\r\n\r\n    _.GetCookie = function(name) {\r\n        var cookies = root.document.cookie ? root.document.cookie.split('; ') : [];\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var pos = cookies[i].indexOf('=');\r\n            if (name === root.decodeURIComponent(cookies[i].slice(0, pos)))\r\n            {\r\n                var cookie = cookies[i].slice(pos + 1).replace(/\\+/g, ' ');\r\n                cookie = root.decodeURIComponent(cookie);\r\n                return cookie;\r\n            }\r\n        }\r\n    };\r\n\r\n    _.GetHashCode = function(input) {\r\n        var result = 0;\r\n        if (input) {\r\n            for (var i = 0; i < input.length; i++) {\r\n                var c = input.charCodeAt(i);\r\n                result = ((result << 5) - result) + c;\r\n                result = result & result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    _.GetConfigurationAsync = function() {\r\n        if (_.m_objConfiguration) {\r\n            return $.Deferred().resolve(_.m_objConfiguration);\r\n        }\r\n        return m_objConfigurationPromise;\r\n    };\r\n\r\n    _.GetCustomSettings = function() {\r\n        var result = _.GetCookie('EXP');\r\n        result = result && _.JsonDeserialize(result);\r\n        return result;\r\n    };\r\n\r\n    _.IsEnabled = function(experimentName, configuration) {\r\n        try {\r\n            var customSettings = _.GetCustomSettings();\r\n            if (customSettings && customSettings.hasOwnProperty(experimentName)) {\r\n                return Boolean(customSettings[experimentName]);\r\n            }\r\n            if (!configuration) {\r\n                return false;\r\n            }\r\n            var experimentSetting = configuration[experimentName];\r\n            if (experimentSetting) {\r\n                if (experimentSetting.hasOwnProperty('enabled') && !experimentSetting['enabled']) {\r\n                    return false;\r\n                }\r\n                var experimentRatio = experimentSetting['ratio'];\r\n                if (experimentRatio <= 0)\r\n                {\r\n                    return false;\r\n                }\r\n                if (experimentRatio >= 100)\r\n                {\r\n                    return true;\r\n                }\r\n                var sessionId = _.GetCookie('SID');\r\n                if (!sessionId) {\r\n                    return false;\r\n                }\r\n                var hash = _.GetHashCode(sessionId + ':' + experimentName);\r\n                if (hash === -2147483648)\r\n                {\r\n                    hash = 0;\r\n                }\r\n                if (hash < 0)\r\n                {\r\n                    hash = -hash;\r\n                }\r\n                return hash < root.Math.floor(2147483647 / 100) * experimentRatio;\r\n            }\r\n        } catch (ex) {\r\n            // do nothing\r\n        }\r\n        return false;\r\n    };\r\n\r\n    _.RunCustomFilter = function (experimentName) {\r\n        try {\r\n            if (window.ExperimentFilter.Filters[experimentName]) {\r\n                return window.ExperimentFilter.Filters[experimentName]();\r\n            }\r\n            return $.Deferred().resolve(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        return $.Deferred().resolve(false);\r\n    }\r\n\r\n    _.IsEnabledAsync = function(experimentName) {\r\n        return _.GetConfigurationAsync().then(function(configuration) {\r\n            return $.Deferred().resolve(_.IsEnabled(experimentName, configuration));\r\n        }, function() {\r\n            return $.Deferred().resolve(_.IsEnabled(experimentName));\r\n        });\r\n    };\r\n    \r\n    _.IsEnabledWithCustomFilterAsync = function (experimentName) {\r\n        return _.IsEnabledAsync(experimentName).then(function (fEnabled) {\r\n            if (fEnabled) {\r\n                return _.RunCustomFilter(experimentName);\r\n            }\r\n            else {\r\n                return $.Deferred().resolve(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    _.JsonDeserialize = function(content) {\r\n        return root.JSON && root.JSON.parse ? root.JSON.parse(content) : (new Function('return (' + content + ')'))();\r\n    };\r\n\r\n    _.SetCookie = function(name, value, options) {\r\n        var cookie = root.encodeURIComponent(name) + '=' + root.encodeURIComponent(value);\r\n        options = options || {};\r\n\r\n        if (typeof options.expires === 'number' || options.expires instanceof Number) {\r\n            var milliseconds = options.expires * 3600 * 1000;\r\n            options.expires = new Date();\r\n            options.expires.setTime(Number(options.expires) + milliseconds);\r\n        }\r\n\r\n        if (options.expires) {\r\n            cookie += '; expires=' + options.expires.toUTCString();\r\n        }\r\n        if (options.path) {\r\n            cookie += '; path=' + options.path;\r\n        }\r\n        if (options.domain) {\r\n            cookie += '; domain=' + options.domain;\r\n        }\r\n        if (options.secure) {\r\n            cookie += '; secure';\r\n        }\r\n        return root.document.cookie = cookie;\r\n    };\r\n\r\n    _.getMetaTagContent = function (inMTName) {\r\n        try {\r\n            var myMTContent = $(\"meta[name='\" + inMTName + \"']\");\r\n            if (myMTContent && myMTContent.length > 0) {\r\n                myMTContent = myMTContent[myMTContent.length - 1].content;\r\n            } else {\r\n                myMTContent = null;\r\n            }\r\n            return myMTContent;\r\n        } catch (e) {\r\n            console.log(e);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    _.setMetaTagContent = function (inMTName, inMTContent) {\r\n        if (!inMTContent) {\r\n            console.log(\"FALSE inMTContent found.\");\r\n            return;\r\n        }\r\n        if (_.getMetaTagContent(inMTName) === null) {\r\n            var myMetaTag = document.createElement(\"meta\");\r\n            myMetaTag.name = inMTName;\r\n            myMetaTag.content = inMTContent;\r\n            document.getElementsByTagName(\"head\")[0].appendChild(myMetaTag);\r\n        } else {\r\n            $(\"meta[name='\" + inMTName + \"']\").attr(\"content\", inMTContent);\r\n        }\r\n    };\r\n\r\n    if (!_.GetCookie('SID')) {\r\n        _.SetCookie('SID', _.GenerateGuid(), {expires: 24 /* hours */, path: '/'});\r\n    }\r\n\r\n    _.TweakExperiment = function(name, enabled) {\r\n        var EXP = _.GetCookie('EXP');\r\n        EXP = EXP ? _.JsonDeserialize(EXP) : {};\r\n        EXP[name] = Boolean(enabled);\r\n        _.SetCookie('EXP', JSON.stringify(EXP), {path: '/'});\r\n    };\r\n\r\n    try {\r\n        root.AmbientContext = _.GetCookie('AmbientContext');\r\n        root.AmbientContext = root.AmbientContext && _.JsonDeserialize(root.AmbientContext);\r\n    } catch(ex) {\r\n    } finally {\r\n        root.AmbientContext = root.AmbientContext || {};\r\n        root.AmbientContext['EXP'] = _.GetCustomSettings();\r\n        root.AmbientContext['SID'] = _.GetCookie('SID');\r\n    }\r\n\r\n    require([\"experimentfilter\"], function () {\r\n        if (!window.WedcsDependencies) {\r\n            window.WedcsDependencies = [];\r\n        }\r\n\r\n        var customFilterDeferreds = [];\r\n        var enabledCustomFilterExpList = [];\r\n        \r\n        for (var customFilterExperiment in window.ExperimentFilter.Filters) {\r\n            if (window.ExperimentFilter.Filters.hasOwnProperty(customFilterExperiment)) {\r\n                customFilterDeferreds.push( _.IsEnabledAsync(customFilterExperiment).then(function (fEnabled) {\r\n                    if (fEnabled) {\r\n                        customFilterDeferreds.push(_.RunCustomFilter(customFilterExperiment).then(function (applyExperiment) {\r\n                            if (applyExperiment) {\r\n                                enabledCustomFilterExpList.push(customFilterExperiment);\r\n                            }\r\n                        }));\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n\r\n        window.WedcsDependencies.push($.when.apply($, customFilterDeferreds).done(function () {\r\n            if (enabledCustomFilterExpList.length > 0) {\r\n                _.setMetaTagContent(\"ms.experimentalexp\", enabledCustomFilterExpList.toString());\r\n            }\r\n        }));\r\n    });\r\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/experiment.js\n ** module id = 34\n ** module chunks = 1 8 10 18\n **/","(function(){\r\n    \"use strict\";\r\n\r\n    var Trace = require(\"trace\"),\r\n        TraceCategory = Trace.TraceCategory;\r\n    var util = require('util');\r\n    var perfEvents = require('perf.events');\r\n\r\n    if (window.insight) {\r\n        Trace.traceError(\"insight.js is loaded more than once.\");\r\n        return;\r\n    }\r\n    var insight = {};\r\n    var customTags = {};\r\n    var customTagsCount = 0;\r\n    var customTagsBatchSize = 6;\r\n\r\n    insight.debugConsoleLogEnabled = false;\r\n    insight.debugLogMsgs = [];\r\n    insight.debugLog = function (inMsg) {\r\n        insight.debugLogMsgs.push(inMsg);\r\n        if (insight.debugConsoleLogEnabled) {\r\n            console.log(inMsg);\r\n        }\r\n    };\r\n    insight.getMetaTagContent = function (inMTName) {\r\n        try {\r\n            var myMTContent = $(\"meta[name='\" + inMTName + \"']\");\r\n            if (myMTContent && myMTContent.length > 0) {\r\n                myMTContent = myMTContent[myMTContent.length - 1].content;\r\n            } else {\r\n                myMTContent = null;\r\n            }\r\n            return myMTContent;\r\n        } catch (e) {\r\n            Trace.traceError(\"getMetaTagContent failed.\", e);\r\n            return null;\r\n        }\r\n    };\r\n    insight.setMetaTagContent = function (inMTName, inMTContent) {\r\n        if (!inMTContent) {\r\n            Trace.traceError(\"FALSE inMTContent found.\");\r\n            return;\r\n        }\r\n        if (insight.getMetaTagContent(inMTName) === null) {\r\n            var myMetaTag = document.createElement(\"meta\");\r\n            myMetaTag.name = inMTName;\r\n            myMetaTag.content = inMTContent;\r\n            document.getElementsByTagName(\"head\")[0].appendChild(myMetaTag);\r\n        } else {\r\n            $(\"meta[name='\" + inMTName + \"']\").attr(\"content\", inMTContent);\r\n        }\r\n    };\r\n    //Common function to fire custom event on clicked element\r\n    insight.processWEDCSCustomEventFromArray = function (inArray) {\r\n        if (typeof window.MscomCustomEvent !== \"function\") {\r\n            return;\r\n        } else if (!inArray || inArray.length === 0) {\r\n            window.MscomCustomEvent();\r\n            return;\r\n        }\r\n        window.MscomCustomEvent.apply(this, inArray);\r\n    };\r\n    ////////////////////// BATCH CUSTOM TAG PROCESSING\r\n    var wedcsLogTimer = 0;\r\n    insight.processAllCustomTags = function () {\r\n\r\n        customTagsCount = 0;\r\n        if (wedcsLogTimer) {\r\n            window.clearTimeout(wedcsLogTimer);\r\n            wedcsLogTimer = 0;\r\n        }\r\n\r\n        var array = [];\r\n        for (var key in customTags) {\r\n            if (customTags[key]) {\r\n                array.push(key, customTags[key]);\r\n                customTags[key] = undefined;\r\n            }\r\n        }\r\n        if (array.length > 0) {\r\n            insight.processWEDCSCustomEventFromArray(array);\r\n        }\r\n    };\r\n    // Value will be appended if the key already exists, split by \";\". So \";\" is not allowed in value.\r\n    insight.addNewCustomTag = function (key, value) {\r\n        if (customTags[key]) {\r\n            customTags[key] += \";\" + value;\r\n        } else {\r\n            customTags[key] = value;\r\n        }\r\n        customTagsCount ++;\r\n        // Process immediately if there are customTagsBatchSize events\r\n        if (customTagsCount >= customTagsBatchSize) {\r\n            insight.processAllCustomTags();\r\n        } else if (!wedcsLogTimer) {\r\n            wedcsLogTimer = window.setTimeout(function (){\r\n                insight.processAllCustomTags();\r\n            }, 1000 * 20);\r\n        }\r\n    };\r\n    insight.setupUnloadTracking = function () {\r\n        $(window).bind(\"beforeunload\", function(){\r\n            insight.processAllCustomTags();\r\n        });\r\n    };\r\n    ////////////////////// ERROR RELATED\r\n    var formatErrorObjectToWedcsArray = function (errorObject) {\r\n        var array = [];\r\n        if (!errorObject) {\r\n            return array;\r\n        }\r\n\r\n        if (errorObject.error) {\r\n            if (errorObject.isBubbled) {\r\n                if (errorObject.error.data) {\r\n                    array.push(\"ms.error\", JSON.stringify(errorObject.error.data).substring(0, 100));\r\n                }\r\n            } else {\r\n                array.push(\"ms.error\", errorObject.error.toString().substring(0, 100));\r\n            }\r\n        }\r\n        if (errorObject.message) {\r\n            array.push(\"ms.errormsg\", errorObject.message.substring(0, 30));\r\n        }\r\n        if (errorObject.source) {\r\n            array.push(\"ms.errorsrc\", errorObject.source);\r\n        }\r\n        if (errorObject.lineno) {\r\n            array.push(\"ms.errorlineno\", errorObject.lineno);\r\n        }\r\n        if (errorObject.colno) {\r\n            array.push(\"ms.errorcolno\", errorObject.colno);\r\n        }\r\n        return array;\r\n    };\r\n    var errorSubscriber = function (errorObject) {\r\n        try {\r\n            var tArray = formatErrorObjectToWedcsArray(errorObject);\r\n            if (tArray.length > 0) {\r\n                insight.processWEDCSCustomEventFromArray(tArray);\r\n            }\r\n        } catch (ex) {\r\n            if (window.console) {\r\n                console.error(ex.toString());\r\n            }\r\n        }\r\n    };\r\n    insight.subscribeErrors = function () {\r\n        var Errors = require(\"errors\");\r\n        Errors.subscribe(errorSubscriber);\r\n    };\r\n    ////////////////////// Subscribe Trace\r\n    var traceSubscriber = function (entry) {\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        var navigationStart = window.performance.timing.navigationStart;\r\n        if (typeof navigationStart !== \"number\") {\r\n            return;\r\n        }\r\n        if (entry.category === TraceCategory.performance) {\r\n            var perfEvent = entry.data;\r\n\r\n            var customPerfArrary = [];\r\n            customPerfArrary.push(perfEvent.name, perfEvent.timeStamp.getTime() - navigationStart);\r\n\r\n            var array = [];\r\n            array.push(\"ms.cus.perf.timing\", customPerfArrary.join());\r\n            insight.processWEDCSCustomEventFromArray(array);\r\n        }\r\n    };\r\n    insight.subscribeTrace = function () {\r\n        Trace.subscribe(traceSubscriber);\r\n    };\r\n    ////////////////////// Comment Related\r\n    var commentSubscriber = function (widget) {\r\n        widget.on(\"commentPosted\", function (data) {\r\n            if (data && data.id) {\r\n                var array = [];\r\n                array.push(\"ms.commentid\", encodeURI(data.id));\r\n                array.push(\"ms.commentdt\", new Date().getTime());\r\n                array.push(\"ms.commentet\", \"commentPosted\");\r\n                insight.processWEDCSCustomEventFromArray(array);\r\n            }\r\n        });\r\n    };\r\n    var commentErrorHandler = function (reason) {\r\n        Trace.traceError(\"comment loading failure\", reason);\r\n        var array = [];\r\n        array.push(\"ms.commenter\", encodeURI(JSON.stringify(reason)));\r\n        array.push(\"ms.commentet\", \"commentLoad\");\r\n        insight.processWEDCSCustomEventFromArray(array);\r\n    };\r\n    var sidenoteSubscriber = function (widget) {\r\n        widget.on(\"sidenotes.commentPosted\", function (data) {\r\n            if (data && data.id) {\r\n                var array = [];\r\n                array.push(\"ms.commentid\", encodeURI(data.id === null ? null : data.id.replace(\"@\", \"#\")));\r\n                array.push(\"ms.commentdt\", new Date().getTime());\r\n                array.push(\"ms.commentet\", \"sidenotePosted\");\r\n                insight.processWEDCSCustomEventFromArray(array);\r\n            }\r\n        });\r\n    };\r\n    var sidenoteErrorHandler = function (reason) {\r\n        Trace.traceError(\"sidenote loading failure\", reason);\r\n        var array = [];\r\n        array.push(\"ms.commenter\", encodeURI(JSON.stringify(reason)));\r\n        array.push(\"ms.commentet\", \"sidenoteLoad\");\r\n        insight.processWEDCSCustomEventFromArray(array);\r\n    };\r\n    insight.setupLiveFyreTracking = function () {\r\n        var commenting = require(\"commenting-callback\");\r\n        var commentPromise = commenting.getPromise(\"comment-init\");\r\n        if(commentPromise) {\r\n            commentPromise.then(commentSubscriber, commentErrorHandler);\r\n        } else {\r\n            Trace.traceError(\"Failed to get comment promise from commenting-callback\");\r\n        }\r\n        var sidenotePromise = commenting.getPromise(\"sidenote-init\");\r\n        if(sidenotePromise) {\r\n            sidenotePromise.then(sidenoteSubscriber, sidenoteErrorHandler);\r\n        } else {\r\n            Trace.traceError(\"Failed to get sidenote promise from commenting-callback\");\r\n        }\r\n    };\r\n    ////////////////////// FOCUS EVENT\r\n    insight.firePageFocusEventAsync = function (type) {\r\n        insight.debugLog(\"stepped inside firePageFocusEventAsync function\");\r\n        var tArray = [];\r\n        tArray.push(\"tp=\" + type);\r\n        tArray.push(\"dt=\" + new Date().getTime());\r\n        insight.addNewCustomTag(\"batch.focusevent\", tArray.join());\r\n    };\r\n    //TODO: The sync version need to be removed after backend jobs are updated\r\n    insight.firePageFocusEvent = function (type) {\r\n        insight.debugLog(\"stepped inside firePageFocusEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.focuseventtime\", new Date().getTime());\r\n        tArray.push(\"ms.focusorblue\", type);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n\r\n        insight.firePageFocusEventAsync(type);\r\n    };\r\n    insight.setupPageFocusTracking = function () {\r\n\r\n        $(window).on(\"blur focus\", function (e) {\r\n            var prevType = $(this).data(\"prevType\");\r\n\r\n            if (prevType !== e.type) {   //reduce double fire issues\r\n                switch (e.type) {\r\n                    case \"blur\":\r\n                        insight.debugLog(\"Blured\");\r\n                        insight.firePageFocusEvent(\"Blured\");\r\n                        break;\r\n                    case \"focus\":\r\n                        insight.debugLog(\"Focused\");\r\n                        insight.firePageFocusEvent(\"Focused\");\r\n                        break;\r\n                }\r\n            }\r\n            $(this).data(\"prevType\", e.type);\r\n        });\r\n\r\n    };\r\n    ////////////////////// COPY EVENT\r\n    insight.fireCopyEvent = function (txt, length) {\r\n        insight.debugLog(\"stepped inside fireCopyEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.copyeventtime\", new Date().getTime());\r\n        tArray.push(\"ms.copycontent\", txt);\r\n        tArray.push(\"ms.copycontentlength\", length);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.setupCopyTracking = function () {\r\n        $(window).bind(\"copy\", function (e, copiedText) {\r\n            // window.getSelection().toString(): text which is manually selected and copied with Ctrl-C or context menu\r\n            // copiedText: code which is copied by the copy button in IE\r\n            // e.target.value: code which is copied by the copy button in other browsers\r\n            var txt = window.getSelection().toString() || copiedText || e.target.value;\r\n            var length = txt.length;\r\n            txt = txt.substring(0, 20); //truncate to limit the length of WEDCS event\r\n            insight.fireCopyEvent(txt, length);\r\n        });\r\n    };\r\n    ////////////////////// SEARCH EVENTS\r\n    insight.setupSearchTracking = function () {\r\n        $(\"#searchForm\").submit(function (e) {            \r\n            var searchTerm = $(this).find(\"input[name='search']\").val();            \r\n            var submittedByBtn = $(this).find(\"#search:focus\").length > 0;\r\n\r\n            var tArray = [];\r\n            tArray.push(\"ms.search.term\", searchTerm);\r\n            tArray.push(\"ms.search.formSubmitType\", submittedByBtn ? 1 : 0);\r\n            insight.processWEDCSCustomEventFromArray(tArray);\r\n        });\r\n    };\r\n    ////////////////////// SWITCHER SELECTION\r\n    insight.fireSwitcherEvent = function (switcher, selectedValue) {\r\n        insight.debugLog(\"stepped inside fireSwitcherEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.switcheventtime\", new Date().getTime());\r\n        tArray.push(\"ms.switcher\", switcher);\r\n        tArray.push(\"ms.switchervalue\", selectedValue);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.setupSwitcherTracking = function () {\r\n        $(\"#theme-selector\").change(function () {\r\n            var selectedValue = $(\"#theme-selector\").val();\r\n            insight.fireSwitcherEvent(\"theme\", selectedValue);\r\n        });\r\n        $(\"#platform-selector\").change(function () {\r\n            var selectedValue = $(\"#platform-selector\").val();\r\n            insight.fireSwitcherEvent(\"platform\", selectedValue);\r\n        });\r\n        $(\"#lang-selector\").change(function () {\r\n            var selectedValue = $(\"#lang-selector\").val();\r\n            insight.fireSwitcherEvent(\"lang\", selectedValue);\r\n        });\r\n    };\r\n    ////////////////////// SCROLL TRACKING\r\n    //Scroll Area definition\r\n    insight.scrollArea = function (inName) {\r\n        try{\r\n            this.name = inName;\r\n            this.scrollNA = false;\r\n            this.scrollBot = false;\r\n            this.scrollThreeQuarter = false;\r\n            this.scrollHalf = false;\r\n            this.scrollQuarter = false;\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the scrollArea function. Error: \" + e);\r\n        }\r\n    };\r\n    //Track multiple scroll areas per page\r\n    insight.currScrollArea = null;\r\n    insight.scrollAreaList = [];\r\n    insight.setCurrScrollArea = function (inIndex) {\r\n        try{\r\n            if (typeof inIndex !== \"number\") {\r\n                return;\r\n            } else if (insight.scrollAreaList.length <= inIndex) {\r\n                return;\r\n            }\r\n            insight.currScrollArea = insight.scrollAreaList[inIndex];\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the setCurrScrollArea function. Error: \" + e);\r\n        }\r\n    };\r\n    //Page dimension variables\r\n    insight.scrollBottomElement = null;\r\n    insight.scrollPageHeight = -1;\r\n    insight.viewportBottom = -1;\r\n    insight.refreshScrollPageDimVars = function () {\r\n        try{\r\n            var tBottom = 0;\r\n            if (insight.scrollBottomElement) {\r\n                tBottom = insight.scrollBottomElement.getBoundingClientRect().top + window.pageYOffset;\r\n            }\r\n            if (tBottom <= 0) {\r\n                tBottom = document.body.getBoundingClientRect().height;\r\n            }\r\n            insight.scrollPageHeight = tBottom;\r\n            insight.viewportBottom = window.pageYOffset + window.innerHeight;\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the refreshScrollPageDimVars function. Error: \" + e);\r\n        }\r\n    };\r\n    insight.suppressMobileEvents = false;\r\n    insight.fireScrollEvent = function (inScrollValue) {\r\n        insight.fireScrollEventSync(inScrollValue, \"scroll\");\r\n        insight.fireScrollEventAsync(inScrollValue, \"scroll\");\r\n    };\r\n    insight.fireScrollStopEvent = function (inScrollValue) {\r\n        insight.fireScrollEventSync(inScrollValue, \"scroll-stop\");\r\n        insight.fireScrollEventAsync(inScrollValue, \"scroll-stop\");\r\n    };\r\n    insight.fireScrollEventAsync= function (inScrollValue, eventType) {\r\n        insight.debugLog(\"stepped inside fireScrollEventAsync function\");\r\n        var tArray = [];\r\n        tArray.push(\"scnum=scroll-\" + inScrollValue);\r\n        tArray.push(\"scn=\" + eventType);\r\n        tArray.push(\"dt=\" + new Date().getTime());\r\n        insight.addNewCustomTag(\"batch.scrollevent\", tArray.join());\r\n    };\r\n    insight.fireScrollEventSync = function (inScrollValue, eventType) {\r\n        insight.debugLog(\"stepped inside fireScrollEvent function\");\r\n        var tArray = [];\r\n        tArray.push(\"ms.pgarea\", \"body\");\r\n        tArray.push(\"ms.scnum\", \"scroll-\" + inScrollValue);\r\n        tArray.push(\"ms.interactiontype\", \"4\");\r\n        tArray.push(\"ms.scn\", eventType);\r\n        insight.processWEDCSCustomEventFromArray(tArray);\r\n    };\r\n    insight.checkForNAScroll = function () {\r\n        try{\r\n            insight.refreshScrollPageDimVars();\r\n            if (insight.scrollPageHeight <= 0) {\r\n                return;\r\n            } else if (insight.suppressMobileEvents && window.innerWidth <= 510) {\r\n                return;\r\n            }\r\n            if (window.innerHeight > insight.scrollPageHeight * 0.90) {\r\n                //Visitor can see the whole page, fire special -na event\r\n                insight.currScrollArea.scrollNA = true;\r\n                insight.fireScrollEvent(\"na\");\r\n            } else {\r\n                insight.fireScrollEvent(\"0%\");\r\n            }\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the checkForNAScroll function. Error: \" + e);\r\n        }\r\n    };\r\n\r\n    var alteredScrollState;\r\n\r\n    insight.checkTrueFalse = function(key, value){\r\n        try{\r\n            if(value){\r\n            insight.scrollAreaList[0][key] = false;  //update the scroll benchmark value from true to false so events can fire again\r\n            return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the checkTrueFalse function. Error: \" + e);\r\n        }\r\n    };\r\n\r\n    $(window).on(\"scrollDirectionStatus\", function(event, scrollStatus){\r\n        try{\r\n            insight.debugLog(\"inside scrollDirectionStatus listener\");\r\n            $.each(insight.scrollAreaList[0], function(key, value) {\r\n                if (insight.scrollAreaList[0].hasOwnProperty(key)) {\r\n                    if(key.match(/scroll/i) && !key.match(/NA/)){   //only benchmarks we want to alter; .25, .50, .75, and 1\r\n                        alteredScrollState = insight.checkTrueFalse(key, value);\r\n                        if(alteredScrollState){\r\n                            insight.debugLog(\"changed value in alteredScrollState. key: \" + key);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the scrollDirectionStatus listener function. Error: \" + e);\r\n        }\r\n    });\r\n\r\n    insight.quarterCheckFire = function(){\r\n        try{\r\n            if(!insight.currScrollArea.scrollQuarter){\r\n                insight.currScrollArea.scrollQuarter = true;\r\n                insight.fireScrollEvent(\"25%\");\r\n            }\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the quarterCheckFire function. Error: \" + e);\r\n        }\r\n    };\r\n\r\n    insight.halfCheckFire = function(){\r\n        try{\r\n            if(!insight.currScrollArea.scrollHalf){\r\n                insight.currScrollArea.scrollHalf = true;\r\n                insight.fireScrollEvent(\"50%\");\r\n            }\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the halfCheckFire function. Error: \" + e);\r\n        }\r\n    };\r\n\r\n    insight.threeQuarterCheckFire = function(){\r\n        try{\r\n            if(!insight.currScrollArea.scrollThreeQuarter){\r\n                insight.currScrollArea.scrollThreeQuarter = true;\r\n                insight.fireScrollEvent(\"75%\");\r\n            }\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the threeQuarterCheckFire function. Error: \" + e);\r\n        }\r\n    };\r\n    var scrollTimer = 0;\r\n    var prevScrollPercent = 0, scrollDirection = \"down\", currScrollDirection = \"down\", tCurrPercent;\r\n    var enable25on50Event = false;\r\n    var enable50on75event = false;\r\n    insight.processScroll = function (stopEvent) {\r\n        try{\r\n            if (!stopEvent) {\r\n                window.clearTimeout(scrollTimer);\r\n                scrollTimer = window.setTimeout(function () {\r\n                    insight.processScroll(true);\r\n                }, 1000 * 10);\r\n\r\n                window.clearTimeout(insight.scrollResizeTimer);\r\n            }\r\n\r\n            if (insight.currScrollArea === null) {\r\n                return;\r\n            }\r\n            insight.refreshScrollPageDimVars();\r\n            if (insight.scrollPageHeight <= 0) {\r\n                return;\r\n            } else if (insight.suppressMobileEvents && window.innerWidth <= 510) {\r\n                return;\r\n            }\r\n            //find current scroll percentage of the page\r\n            tCurrPercent = insight.viewportBottom / insight.scrollPageHeight;\r\n\r\n            if (stopEvent === true) {\r\n                if (tCurrPercent > 0.99) {\r\n                    tCurrPercent = 1.0;\r\n                }\r\n                insight.fireScrollStopEvent(Math.round(tCurrPercent * 100) + \"%\");\r\n                return;\r\n            }\r\n\r\n            //check for a non-scrollable page; fire scroll n/a if true\r\n            if (window.innerHeight > insight.scrollPageHeight * 0.90) {\r\n                //Visitor can see the whole page, fire special -na event\r\n                if (!insight.currScrollArea.scrollNA) {\r\n                    insight.currScrollArea.scrollNA = true;\r\n                    insight.fireScrollEvent(\"na\");\r\n                }\r\n                return;\r\n            }\r\n\r\n            //check for small page which would cut off 25% event\r\n            if((window.innerHeight / insight.scrollPageHeight) > 0.50){\r\n                enable25on50Event = true;\r\n            }else if((window.innerHeight / insight.scrollPageHeight) > 0.75){\r\n                enable50on75event = true;\r\n            }\r\n\r\n            //update the scroll direction based off of previous scroll percentage and current scroll percentage\r\n            scrollDirection = prevScrollPercent <= tCurrPercent ? \"down\" : \"up\";\r\n            //update the prevScrollPercent variable with the latest scroll percentage\r\n            prevScrollPercent = tCurrPercent;\r\n\r\n            try{\r\n                if(currScrollDirection !== scrollDirection){\r\n                    //change all scroll benchmarks to false if they have already fired\r\n                    //we want to be able to capture the scroll benchmark event again if the user has changed scroll direction\r\n                    $(window).trigger(\"scrollDirectionStatus\", [\"changed\"]);\r\n                }\r\n\r\n                if (tCurrPercent > 0.99) {\r\n                    if(!insight.currScrollArea.scrollBot){\r\n                        insight.currScrollArea.scrollBot = true;\r\n                        insight.fireScrollEvent(\"100%\");\r\n                    }\r\n                }else if (tCurrPercent > 0.75) {\r\n                    if(enable50on75event){  //user on a small page that will never reach the 25% or 50% benchmark; send 25%, 50% event with 75% conditional\r\n                        if(scrollDirection === \"down\"){ //maintain order for timestamp purposes\r\n                            insight.quarterCheckFire();\r\n                            insight.halfCheckFire();\r\n                            insight.threeQuarterCheckFire();\r\n                        }else{\r\n                            insight.threeQuarterCheckFire();\r\n                            insight.halfCheckFire();\r\n                            insight.quarterCheckFire();\r\n                        }\r\n                    }else{\r\n                        insight.threeQuarterCheckFire();\r\n                    }\r\n                }else if (tCurrPercent > 0.50) {\r\n                    if(enable25on50Event){  //user on a small page that will never reach the 25% benchmark; send 25% event with 50% conditional\r\n                        if(scrollDirection === \"down\"){ //maintain order for timestamp purposes\r\n                            insight.quarterCheckFire();\r\n                            insight.halfCheckFire();\r\n                        }else{\r\n                            insight.halfCheckFire();\r\n                            insight.quarterCheckFire();\r\n                        }\r\n                    }else{\r\n                        insight.halfCheckFire();\r\n                    }\r\n                }else if (tCurrPercent > 0.25) {\r\n                    insight.quarterCheckFire();\r\n                }\r\n            }catch(e){\r\n                Trace.traceError(\"Error in the scroll benchmark conditionals. Raw error: \" + e);\r\n            }\r\n            currScrollDirection = scrollDirection;\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the processScroll function. Error: \" + e);\r\n        }\r\n    };\r\n    insight.scrollResizeTimer = 0;\r\n    insight.setupScrollTracking = function () {\r\n        try{\r\n            insight.scrollBottomElement = $(\"footer:first\")[0];\r\n            insight.scrollAreaList.push(new insight.scrollArea(\"body\"));\r\n            insight.setCurrScrollArea(0);\r\n            window.addEventListener(\"scroll\", function () {\r\n                insight.processScroll();\r\n            });\r\n            scrollTimer = window.setTimeout(function () {\r\n                insight.processScroll(true);\r\n            }, 1000 * 10);\r\n            //Note: resize also catches zoom in/out\r\n            $(window).resize(function () {\r\n                window.clearTimeout(insight.scrollResizeTimer);\r\n                insight.scrollResizeTimer = window.setTimeout(function () {\r\n                    insight.processScroll();\r\n                }, 500);\r\n            });\r\n            //fire 0% scroll or n/a scroll depending on window height\r\n            insight.checkForNAScroll();\r\n        }catch(e){\r\n            Trace.traceError(\"Error in the setupScrollTracking function. Error: \" + e);\r\n        }\r\n    };\r\n    insight.extractMetaFromAmbientContext = function () {\r\n        if (window.AmbientContext) {\r\n            for (var key in window.AmbientContext) {\r\n                if (window.AmbientContext.hasOwnProperty(key)) {\r\n                    var content = window.AmbientContext[key];\r\n                    if (content) {\r\n                        if (!(typeof(content) === \"string\" || content instanceof String)) {\r\n                            content = JSON.stringify(content);\r\n                        }\r\n                    }\r\n                    $(\"head\").append(\"<meta name='ms.\" + encodeURI(key.replace(\".\", \"_\")) +\r\n                        \"' content='\" + encodeURI(content) + \"' />\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    insight.getPerfTiming = function () {\r\n        if (!window.performance || !window.performance.timing) {\r\n            return null;\r\n        }\r\n        var navigationStart = window.performance.timing.navigationStart;\r\n        if (typeof navigationStart !== \"number\") {\r\n            return null;\r\n        }\r\n        //Navigation timing attributes, ref: https://w3c.github.io/navigation-timing/\r\n        var keys = [\"redirectStart\", \"redirectEnd\", \"fetchStart\", \"connectStart\", \"connectEnd\", \"requestStart\", \"responseStart\",\r\n                    \"responseEnd\", \"domLoading\", \"domInteractive\", \"domContentLoadedEventStart\", \"domContentLoadedEventEnd\",\r\n                    \"domComplete\", \"loadEventStart\", \"loadEventEnd\"];\r\n        var timeInfoArr = [];\r\n        for (var index = 0; index < keys.length; index++) {\r\n            var key = keys[index];\r\n            if (typeof window.performance.timing[key] !== \"number\") {\r\n                timeInfoArr.push(\"\");\r\n            } else {\r\n                var elapsed = window.performance.timing[key] !== 0 ? window.performance.timing[key] - navigationStart : \"\";\r\n                timeInfoArr.push(elapsed);\r\n            }\r\n        }\r\n        return timeInfoArr.join();\r\n    };\r\n    var biMapping = {\r\n        \"document_id\": \"ms.documentid\",\r\n        \"locale\": \"ms.contentlang\",\r\n        \"updated_at\": \"ms.publishtime\",\r\n        \"experiment_id\": \"ms.experimentid\",\r\n        \"original_content_git_url\": \"ms.giturl\",\r\n        \"original_ref_skeleton_git_url\": \"ms.gitsourceurl\",\r\n        \"site_name\": \"ms.sitename\",\r\n        \"gitcommit\": \"ms.gitcommit\",\r\n        \"ref_skeleton_gitcommit\": \"ms.gitsourcecommit\",\r\n        \"depot_name\": \"ms.depotname\",\r\n        \"pagetype\": \"ms.opspagetype\",\r\n        \"translationtype\": \"ms.translationtype\",\r\n        \"dev_langs\": \"ms.devlang\"\r\n    };\r\n    insight.setupBiTags = function () {\r\n        for (var key in biMapping) {\r\n            var content = insight.getMetaTagContent(key);\r\n            if (content !== null) {\r\n                insight.setMetaTagContent(biMapping[key], content);\r\n            }\r\n        }\r\n        var locale = require(\"locale\");\r\n        var currentLocale = locale.getLanguageFromUrl();\r\n        insight.setMetaTagContent(\"ms.locale\", encodeURI(currentLocale));\r\n\r\n        //add ms.lang and ms.loc if not exist\r\n        if (currentLocale) {\r\n            var strs = currentLocale.split(\"-\");\r\n            if (insight.getMetaTagContent(\"ms.lang\") === null) {\r\n                insight.setMetaTagContent(\"ms.lang\", encodeURI(strs[0]));\r\n            }\r\n            if (insight.getMetaTagContent(\"ms.loc\") === null) {\r\n                insight.setMetaTagContent(\"ms.loc\", strs.length > 1 ? encodeURI(strs[1]) : \"\");\r\n            }\r\n        }\r\n\r\n        //add meta tag for theme\r\n        if (msDocs.data.currentTheme && (msDocs.data.currentTheme === 'light' || msDocs.data.currentTheme === 'dark' )) {\r\n            if (insight.getMetaTagContent(\"ms.theme\") === null) {\r\n                insight.setMetaTagContent(\"ms.theme\", msDocs.data.currentTheme);\r\n            }\r\n        }\r\n        \r\n        //depot_name is an OP specific metadata, if it exists while ms.contentsource tag is missing, pick it up\r\n        //Insight team relies on ms.contentsource to find out all OP pages from WEDCS ocean\r\n        if (insight.getMetaTagContent(\"depot_name\") !== null &&\r\n                insight.getMetaTagContent(\"ms.contentsource\") === null) {\r\n            insight.setMetaTagContent(\"ms.contentsource\", \"OP\");\r\n        }\r\n    };\r\n    insight.setupCampaignId = function() {\r\n        var utilities = require('docs.utilities');\r\n        var cookies = require('cookies');\r\n\r\n        var campaignId;\r\n        var subscriptionId;\r\n        if ((campaignId = utilities.getParameterByName(\"utm_campaign\"))) {\r\n            subscriptionId = utilities.getParameterByName(\"subscriptionId\");\r\n        } else if ((campaignId = utilities.getParameterByName(\"WT.mc_id\"))) {\r\n            // subscription ID only belongs to utm_campaign\r\n            subscriptionId = null;\r\n        } else {\r\n            campaignId = cookies.getCookie(\"cpnid\");\r\n            subscriptionId = cookies.getCookie(\"subid\");\r\n        }\r\n\r\n        if (campaignId) {\r\n            // set the cookie to expire after half an hour\r\n            cookies.setCookie(\"cpnid\", campaignId, { expires: (0.5 / 24), domain: \".microsoft.com\" });\r\n            // add campaign ID to meta so it can be sent along with the PV event\r\n            insight.setMetaTagContent(\"ms.cpnid\", campaignId);\r\n        }\r\n\r\n        if (subscriptionId) {\r\n            // set the cookie to expire after half an hour\r\n            cookies.setCookie(\"subid\", subscriptionId, { expires: (0.5 / 24), domain: \".microsoft.com\" });\r\n            // add subscription ID to meta so it can be sent along with the PV event\r\n            insight.setMetaTagContent(\"ms.subid\", subscriptionId);\r\n        } else {\r\n            // if subscription ID is null, delete the cookie\r\n            cookies.setCookie(\"subid\", subscriptionId, { expires: \"Thu, 01 Jan 1970 00:00:01 GMT\", domain: \".microsoft.com\" });\r\n        }\r\n    };\r\n    insight.isGlobalMetadataEnabled = function (meta) {\r\n        if (insight.getMetaTagContent(meta) !== null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    insight.listMSMetadata = function () {\r\n        var res = [];\r\n        var arr = $(\"meta[name^='ms.']\");\r\n        for (var i = 0; i < arr.length; i++) {\r\n            res.push(arr[i].name);\r\n        }\r\n        return res.join(\", \");\r\n    };\r\n    insight.enableWEDCS = function () {\r\n        //WEDCS base settings\r\n        window.varClickTracking = 1;\r\n        window.varCustomerTracking = 0;\r\n        window.varAutoFirePV = 1;\r\n        window.route = \"\";\r\n        window.ctrl = \"\";\r\n\r\n        require([\"docs.config\"], function(config){\r\n            util.loadLibrary(config.paths.wedcs).then(function () {\r\n                insight.subscribeErrors();\r\n                insight.subscribeTrace();\r\n                insight.setupPageFocusTracking();\r\n                insight.setupScrollTracking();\r\n                insight.setupCopyTracking();\r\n                insight.setupSearchTracking();\r\n                insight.setupSwitcherTracking();\r\n                insight.setupLiveFyreTracking();\r\n                insight.setupUnloadTracking();\r\n            });\r\n\r\n            //Expose $ and jQuery, JSLL need them\r\n            require('expose?$!expose?jQuery!jquery');\r\n            util.loadLibrary(config.paths.jsll).then(function () {\r\n                window.Asimov.clickstreamTracker.setAppId(\"docs\");\r\n                window.Asimov.clickstreamTracker.init();\r\n            });\r\n\r\n        });\r\n\r\n    };\r\n\r\n    $(document).ready(function () {\r\n        try {\r\n            insight.extractMetaFromAmbientContext();\r\n            insight.setupBiTags();\r\n            insight.setupCampaignId();\r\n\r\n            //TODO: remove following two lines after backend job is updated to use custom event instead of page view event\r\n            //For now, the meta should be added before load ms.js\r\n            var perfInfo = insight.getPerfTiming();\r\n            if (perfInfo) {\r\n                $(\"head\").append(\"<meta name='ms.perf.timing' content='\" + perfInfo + \"' />\");\r\n            }\r\n\r\n            //enable WEDCS after dependency promises finished or failed\r\n            $.when.apply($, window.WedcsDependencies).then(function () {\r\n                insight.enableWEDCS();\r\n            }, function () {\r\n                insight.enableWEDCS();\r\n            });\r\n        } catch (ex) {\r\n            Trace.traceError(ex.toString());\r\n        }\r\n    });\r\n    //Expose jQuery for easy debugging\r\n    insight.jQuery = $;\r\n    window.insight = insight;\r\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/insight.js\n ** module id = 36\n ** module chunks = 1 8 10 18\n **/","define(\"commenting-callback\", function () {\r\n    \"use strict\";\r\n\r\n    var deferreds = {\r\n        \"comment-init\": $.Deferred(),\r\n        \"sidenote-init\": $.Deferred()\r\n    };\r\n\r\n    module.exports.attach = function (type, handler, errorHandler) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            defer.promise().then(handler, errorHandler);\r\n        }\r\n    };\r\n\r\n    module.exports.getPromise = function (type) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            return defer.promise();\r\n        }\r\n        return null;\r\n    };\r\n\r\n    module.exports.resolve = function (type, valueObject) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            defer.resolve(valueObject);\r\n        }\r\n    };\r\n\r\n    module.exports.reject = function (type, valueObject) {\r\n        var defer = deferreds[type];\r\n        if (defer) {\r\n            defer.reject(valueObject);\r\n        }\r\n    };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/commenting-callback.js\n ** module id = 37\n ** module chunks = 1 5 8 10 18\n **/"],"sourceRoot":""}