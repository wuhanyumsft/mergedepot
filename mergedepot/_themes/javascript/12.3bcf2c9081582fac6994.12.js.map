{"version":3,"sources":["webpack:///12.3bcf2c9081582fac6994.12.js","webpack:///./javascript/docs.azureselector.js?01b7","webpack:///./javascript/docs.branchselector.js?e052","webpack:///./javascript/rating.js?eb43","webpack:///./javascript/survey.js?6ab4*","webpack:///./javascript/bilingual.js?8c16"],"names":["webpackJsonp","41","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","URI","mainframe","generateOptionsMap","selectorDivElement","isSingleSelector","optionsMap","getAzureSelectorAnchors","each","$","this","text","contents","trim","slice","split","length","firstOption","secondOption","targetLink","attr","removeQueryString","path","index","indexOf","substring","getCurrentSelectedOptions","browserUrlString","window","location","href","toLowerCase","mainOptionValue","secondaryOptionValue","targetUrlString","target","browser","equals","createDropdowns","defaultOption","dropdownItemTemplate","key","jumpToUrl","targetUrl","selectedOptions","container","createAzureSelectorsContainer","firstDropdown","createAzureSelectorDropdown","secondDropdown","populateDropdownOptions","val","change","replaceWith","renderAzureSelectors","locFile","loadUHFFile","uhf","sharedLocString","JSON","parse","find","getSingleAzureSelectors","getDoubleAzureSelectors","apply","undefined","42","cookies","utilities","isInTestEnvironment","authenticationInfo","getCookie","authenticationFields","i","authKeyValuePair","getAvailableBranchesAsync","windowUrl","baseUrlString","origin","apiUrlString","encodeURIComponent","pathname","apiUrl","loadJsonFileAsync","toString","err","when","renderBranchSelectorAsync","removeAttr","done","branches","sort","dropdown","createBranchSelectorDropdown","targetBranchName","setCookie","search","wrapper","label","append","appendToActionList","44","metadata","locale","environment","hostname","openFeedbackOptions","containerElementId","siteNameMetaName","documentMetaName","localeMetaName","uiLocale","getLanguageFromUrl","responsiveRule","get","propertyBag","ms.assetid","45","e","t","c","n","o","s","a","SMCX","getElementById","getElementsByTagName","createElement","type","async","id","src","protocol","join","parentNode","insertBefore","document","call","46","bilingualType","__WEBPACK_AMD_REQUIRE_ARRAY__","util","bilingualUrl","translationType","OL","options","translation_type","is_beta","disclaimer_container","selector","tenant","skip","loadLibrary"],"mappings":"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","file":"12.3bcf2c9081582fac6994.12.js","sourcesContent":["webpackJsonp([12,14],{\n\n/***/ 41:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n\t * The Azure Selector component of the DOCS website.\r\n\t * Azure Selector is a component consists of one or two dropdowns displayed inline. When all of the dropdowns has a valid\r\n\t * value, the website will jump to the target page. If the user selects a value in one of the dropdown, the other dropdown\r\n\t * will also populate all the available values accordign the first selected one.\r\n\t *\r\n\t * Dependencies:\r\n\t *     - urijs: Find the current selected item by comparing the URLs\r\n\t *     - docs.mainframe: Construct/Manipulate Azure DOM elements\r\n\t */\r\n\t\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(8), __webpack_require__(23)], __WEBPACK_AMD_DEFINE_RESULT__ = function(URI, mainframe) {\r\n\t    \"use strict\";\r\n\t\r\n\t    // I will do a unified implementation of the Azure Selector for both one-dropdown and two-dropdowns.\r\n\t    // For the single azure selector, the input HTML would like to be:\r\n\t    // <div class=\"op_single_selector\">\r\n\t    //   <ul>\r\n\t    //     <li><a href=\"../a1.html\">A1</a></li>\r\n\t    //     <li><a href=\"../a2.html\">A2</a></li>\r\n\t    //     <li><a href=\"../a3.html\">A3</a></li>\r\n\t    //   </ul>\r\n\t    // </div>\r\n\t    //\r\n\t    // For the double azure selectors, the input HTML would look like:\r\n\t    // <div class=\"op_multi_selector\" title1=\"First Opt\" title2=\"Second Opt\">\r\n\t    //   <ul>\r\n\t    //     <li><a href=\"../c1.html\">(A1 | B1)</a></li>\r\n\t    //     <li><a href=\"../c2.html\">(A1 | B2)</a></li>\r\n\t    //     <li><a href=\"../c3.html\">(A2 | B1)</a></li>\r\n\t    //     <li><a href=\"../c4.html\">(A2 | B3)</a></li>\r\n\t    //     <li><a href=\"../c5.html\">(A3 | B1)</a></li>\r\n\t    //     <li><a href=\"../c6.html\">(A3 | B2)</a></li>\r\n\t    //     <li><a href=\"../c7.html\">(A3 | B3)</a></li>\r\n\t    //   </ul>\r\n\t    // </div>\r\n\t\r\n\t    /**\r\n\t     * First of all, we need to generate a Dictionary of the available options. For example, the mapping table of the single azure selector should be like:\r\n\t     * {\r\n\t     *     A1: { default: \"../a1.html\" },\r\n\t     *     A2: { default: \"../a2.html\" },\r\n\t     *     A3: { default: \"../a3.html\" }\r\n\t     * }\r\n\t     * But the mapping table for the double azure selectors would be a little bit compilicated:\r\n\t     * {\r\n\t     *     A1: {\r\n\t     *         B1: \"../c1.html\",\r\n\t     *         B2: \"../c2.html\"\r\n\t     *     }\r\n\t     *     A2: {\r\n\t     *         B1: \"../c3.html\",\r\n\t     *         B3: \"../c4.html\"\r\n\t     *     },\r\n\t     *     A3: {\r\n\t     *         B1: \"../c5.html\",\r\n\t     *         B2: \"../c6.html\",\r\n\t     *         B3: \"../c7.html\"\r\n\t     *     }\r\n\t     * }\r\n\t     */\r\n\t    function generateOptionsMap(selectorDivElement, isSingleSelector) {\r\n\t        var optionsMap = {};\r\n\t        mainframe.getAzureSelectorAnchors(selectorDivElement).each(function () {\r\n\t            if ($(this) && $(this).text()) {\r\n\t                var contents = (isSingleSelector ? [$(this).text(), \"default\"] : $(this).text().trim().slice(1, -1).split(\"|\"));\r\n\t                if (contents.length === 2) {\r\n\t                    var firstOption = contents[0].trim();\r\n\t                    var secondOption = contents[1].trim();\r\n\t                    var targetLink = $(this).attr(\"href\");\r\n\t                    if (firstOption && secondOption && targetLink) {\r\n\t                        if (!optionsMap[firstOption]) {\r\n\t                            optionsMap[firstOption] = {};\r\n\t                        }\r\n\t                        optionsMap[firstOption][secondOption] = targetLink;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t        return optionsMap;\r\n\t    }\r\n\t\r\n\t    function removeQueryString(path){\r\n\t        if(path && path.length){\r\n\t            var index = path.indexOf('?');\r\n\t            if(index > 0){\r\n\t                path = path.substring(0, index);\r\n\t            }\r\n\t        }\r\n\t        return path;\r\n\t\t}\r\n\t    /**\r\n\t     * Get the current selected options from the optionsMap and return a two-element tuple. For the single selector, the second option is always \"default\".\r\n\t     */\r\n\t    function getCurrentSelectedOptions(optionsMap, isSingleSelector) {\r\n\t        var browserUrlString = window.location.href.toLowerCase();\r\n\t        for (var mainOptionValue in optionsMap) {\r\n\t            for (var secondaryOptionValue in optionsMap[mainOptionValue]) {\r\n\t                var targetUrlString = optionsMap[mainOptionValue][secondaryOptionValue].toLowerCase();\r\n\t                var target = removeQueryString(targetUrlString);\r\n\t                var browser = removeQueryString(browserUrlString);\r\n\t                if (URI(target, browser).equals(browser)) {\r\n\t                    return [mainOptionValue, secondaryOptionValue];\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return [null, null];\r\n\t    }\r\n\t\r\n\t\r\n\t    /**\r\n\t     * Next, one or two dropdowns are need to be created according to the generated optionsMap. The dropdowns are differentiate by main and secondary.\r\n\t     * The secondary dropdown's availble options will always be populated according to the main dropdown's current selection (If no item is selected, just\r\n\t     * make the secondary dropdown's availble options to empty).\r\n\t     */\r\n\t    function createDropdowns(selectorDivElement, isSingleSelector, defaultOption) {\r\n\t\r\n\t        function dropdownItemTemplate(key) { return [key, key]; }\r\n\t        function jumpToUrl(targetUrl) { window.location.href = targetUrl; }\r\n\t\r\n\t        var optionsMap = generateOptionsMap(selectorDivElement, isSingleSelector);\r\n\t        var selectedOptions = getCurrentSelectedOptions(optionsMap, isSingleSelector);\r\n\t\r\n\t        var container = mainframe.createAzureSelectorsContainer();\r\n\t        var firstDropdown = mainframe.createAzureSelectorDropdown(container, selectorDivElement.attr(\"title1\"));\r\n\t        var secondDropdown = null;\r\n\t        mainframe.populateDropdownOptions(firstDropdown, optionsMap, dropdownItemTemplate, false, defaultOption);\r\n\t        firstDropdown.val(selectedOptions[0]);\r\n\t        if (!isSingleSelector) {\r\n\t            secondDropdown = mainframe.createAzureSelectorDropdown(container, selectorDivElement.attr(\"title2\"));\r\n\t            firstDropdown.change(function () {\r\n\t                mainframe.populateDropdownOptions(secondDropdown, firstDropdown.val() ? optionsMap[firstDropdown.val()] : {}, dropdownItemTemplate, false, defaultOption);\r\n\t            });\r\n\t            secondDropdown.change(function () {\r\n\t                if (firstDropdown.val() && secondDropdown.val()) {\r\n\t                    jumpToUrl(optionsMap[firstDropdown.val()][secondDropdown.val()]);\r\n\t                }\r\n\t            });\r\n\t            firstDropdown.change();\r\n\t            secondDropdown.val(selectedOptions[1]);\r\n\t        } else {\r\n\t            firstDropdown.change(function () {\r\n\t                if (firstDropdown.val()) {\r\n\t                    jumpToUrl(optionsMap[firstDropdown.val()][\"default\"]);\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t\r\n\t        selectorDivElement.replaceWith(container);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * This function will convert both the Azure Single Selector as well as the Azure Double Selector HTMLs to the corresponding dropdown within the text.\r\n\t     * @returns void\r\n\t     */\r\n\t    function renderAzureSelectors() {\r\n\t        var locFile = __webpack_require__(18);\r\n\t        \r\n\t        locFile.loadUHFFile(function(uhf) {\r\n\t\r\n\t            var sharedLocString = JSON.parse(uhf.find('sharedLocJson').text());\r\n\t            var defaultOption = sharedLocString['null.option.description'];\r\n\t\r\n\t            mainframe.getSingleAzureSelectors().each(function () { createDropdowns($(this), true, defaultOption); });\r\n\t            mainframe.getDoubleAzureSelectors().each(function () { createDropdowns($(this), false, defaultOption); });\r\n\t        });\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        renderAzureSelectors: renderAzureSelectors\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ },\n\n/***/ 42:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n\t * The Branch Selector component of the DOCS website\r\n\t *\r\n\t * Dependencies:\r\n\t *     - cookies: Read and write cookies to the website\r\n\t *     - urijs: Parse and append query string to the current URL\r\n\t *     - docs.mainframe: Construct/Manipulate selector DOM elements\r\n\t */\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5), __webpack_require__(8), __webpack_require__(17),  __webpack_require__(23)], __WEBPACK_AMD_DEFINE_RESULT__ = function(cookies, URI, utilities, mainframe) {\r\n\t    \"use strict\";\r\n\t\r\n\t    /**\r\n\t     * Cookies[\"AUTHENTICATION_INFORMATION\"] = \"IsAuthenticated%3Dtrue\"\r\n\t     */\r\n\t    function isInTestEnvironment() {\r\n\t        var authenticationInfo = cookies.getCookie(\"AUTHENTICATION_INFORMATION\");\r\n\t        if (!authenticationInfo) {\r\n\t            return false;\r\n\t        }\r\n\t        var authenticationFields = authenticationInfo.split(\";\");\r\n\t        if (!authenticationFields || !authenticationFields.length) {\r\n\t            return false;\r\n\t        }\r\n\t        for (var i = 0; i < authenticationFields.length; i++) {\r\n\t            if (!authenticationFields[i]) {\r\n\t                return false;\r\n\t            }\r\n\t            var authKeyValuePair = authenticationFields[i].split(\"=\");\r\n\t            if (!authKeyValuePair || authKeyValuePair.length !== 2) {\r\n\t                return false;\r\n\t            }\r\n\t            if (authKeyValuePair[0].trim().toLowerCase() === \"isauthenticated\") {\r\n\t                return authKeyValuePair[1].trim().toLowerCase() === \"true\";\r\n\t            }\r\n\t        }\r\n\t        return false;\r\n\t    }\r\n\t\r\n\t    function getAvailableBranchesAsync() {\r\n\t        try {\r\n\t            var windowUrl = URI(window.location.href);\r\n\t            var baseUrlString = URI(window.location.href).origin();\r\n\t            var apiUrlString = \"/_api/branches?docPath=\" + encodeURIComponent(windowUrl.pathname());\r\n\t            var apiUrl = URI(apiUrlString, baseUrlString);\r\n\t            return utilities.loadJsonFileAsync(apiUrl.toString());\r\n\t        } catch (err) {\r\n\t            return $.when(null);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Renders the branch selector if it is in the DEVINT or SANBOX environment.\r\n\t     * @returns {JQueryPromise} An async operation which represents the process of contructing the branch selector\r\n\t     */\r\n\t    function renderBranchSelectorAsync() {\r\n\t        if (!isInTestEnvironment()) {\r\n\t            return $.when();\r\n\t        }\r\n\t\r\n\t        $('#contenteditbtn').removeAttr('hidden');\r\n\t\r\n\t        return getAvailableBranchesAsync().done(function (branches) {\r\n\t            if (branches && branches.length) {\r\n\t                branches.sort();\r\n\t                var dropdown = mainframe.createBranchSelectorDropdown(branches);\r\n\t                dropdown.change(function () {\r\n\t                    var targetBranchName = dropdown.val();\r\n\t                    if (targetBranchName) {\r\n\t                        cookies.setCookie(\"CONTENT_BRANCH\", targetBranchName);\r\n\t                        window.location.href = URI(window.location.href).search(\"branch=\" + targetBranchName).toString();\r\n\t                    }\r\n\t                });\r\n\t                dropdown.val(cookies.getCookie(\"CONTENT_BRANCH\"));\r\n\t                var wrapper = $(\"<li></li>\");\r\n\t                var label = $(\"<label for=\\\"branch-selector\\\">Branch</label>\");\r\n\t                wrapper.append(label);\r\n\t                wrapper.append(dropdown);\r\n\t                mainframe.appendToActionList(wrapper);\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t\r\n\t    return {\r\n\t        renderBranchSelectorAsync: renderBranchSelectorAsync\r\n\t    };\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ },\n\n/***/ 44:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(15), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function (metadata, locale) {\r\n\t    \"use strict\";\r\n\t    // connect to int by default.\r\n\t    var environment = \"int\";\r\n\t    if (location.hostname === \"docs.microsoft.com\") {\r\n\t        //only connect to prod when it's docs production environment.\r\n\t        environment = \"prod\";\r\n\t    }\r\n\t    var openFeedbackOptions = {\r\n\t        environment: environment,\r\n\t        containerElementId: \"openFeedbackContainer\",\r\n\t        siteNameMetaName: \"site_name\",\r\n\t        documentMetaName: \"document_id\",\r\n\t        localeMetaName: \"locale\", // content locale\r\n\t        uiLocale: locale.getLanguageFromUrl(), // user preferred locale specified in url\r\n\t        responsiveRule: \"(min-width: 1024px)\"\r\n\t    };\r\n\t\r\n\t    // USER STORY 558937: Send both document_id and ms.assetid when call rating service API\r\n\t    if (metadata.get(\"ms.assetid\")) {\r\n\t        openFeedbackOptions.propertyBag = {\r\n\t            \"ms.assetid\": metadata.get(\"ms.assetid\")\r\n\t        };\r\n\t    }\r\n\t    // load openfeedback\r\n\t    window.openFeedbackOptions = openFeedbackOptions;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n\n/***/ 45:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t    \"use strict\";\r\n\t\r\n\t    /* jshint ignore:start */\r\n\t    (function(e,t,c,n){var o,s,a;e.SMCX=e.SMCX||[],t.getElementById(n)||(o=t.getElementsByTagName(c),s=o[o.length-1],a=t.createElement(c),a.type=\"text/javascript\",a.async=!0,a.id=n,a.src=[\"https:\"===location.protocol?\"https://\":\"http://\",\"widget.surveymonkey.com/collect/website/js/79yNbHm5_2Bc09cabC381UfD6Mz_2FuWCiepbBF6EB_2FT0Ea4MCk82Bh_2BApaijjR77BSR.js\"].join(\"\"),s.parentNode.insertBefore(a,s))})(window,document,\"script\",\"smcx-sdk\");\r\n\t    /* jshint ignore:end */\r\n\t\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ },\n\n/***/ 46:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(15)], __WEBPACK_AMD_DEFINE_RESULT__ = function (metadata) {\r\n\t    \"use strict\";\r\n\t    var bilingualType = metadata.get('bilingual_type');\r\n\t    if (bilingualType && bilingualType === 'hover over') {\r\n\t        __webpack_require__.e/* require */(6, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(7), __webpack_require__(29), __webpack_require__(47)]; (function (locale, util) {\r\n\t            var uiLocale = locale.getLanguageFromUrl(); // user preferred locale specified in url\r\n\t            var bilingualUrl = '//oljscdn.azureedge.net/js/popover.' + uiLocale + '.min.js';\r\n\t            var translationType = metadata.get('translation_type');\r\n\t\r\n\t            window.OL = window.OL || {};\r\n\t            window.OL.options = window.OL.options || {};\r\n\t            window.OL.options.translation_type = translationType || '';\r\n\t            window.OL.options.is_beta = false;\r\n\t            window.OL.options.disclaimer_container = \"#main\";\r\n\t            window.OL.options.selector = \"#main\";\r\n\t            window.OL.options.tenant = \"OL\";\r\n\t            window.OL.options.skip = \"div.metadata\";\r\n\t\r\n\t            util.loadLibrary(bilingualUrl);\r\n\t        }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});\r\n\t    }\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); \r\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 12.3bcf2c9081582fac6994.12.js\n **/","/**\r\n * The Azure Selector component of the DOCS website.\r\n * Azure Selector is a component consists of one or two dropdowns displayed inline. When all of the dropdowns has a valid\r\n * value, the website will jump to the target page. If the user selects a value in one of the dropdown, the other dropdown\r\n * will also populate all the available values accordign the first selected one.\r\n *\r\n * Dependencies:\r\n *     - urijs: Find the current selected item by comparing the URLs\r\n *     - docs.mainframe: Construct/Manipulate Azure DOM elements\r\n */\r\n\r\ndefine([\"urijs\", \"docs.mainframe\"], function(URI, mainframe) {\r\n    \"use strict\";\r\n\r\n    // I will do a unified implementation of the Azure Selector for both one-dropdown and two-dropdowns.\r\n    // For the single azure selector, the input HTML would like to be:\r\n    // <div class=\"op_single_selector\">\r\n    //   <ul>\r\n    //     <li><a href=\"../a1.html\">A1</a></li>\r\n    //     <li><a href=\"../a2.html\">A2</a></li>\r\n    //     <li><a href=\"../a3.html\">A3</a></li>\r\n    //   </ul>\r\n    // </div>\r\n    //\r\n    // For the double azure selectors, the input HTML would look like:\r\n    // <div class=\"op_multi_selector\" title1=\"First Opt\" title2=\"Second Opt\">\r\n    //   <ul>\r\n    //     <li><a href=\"../c1.html\">(A1 | B1)</a></li>\r\n    //     <li><a href=\"../c2.html\">(A1 | B2)</a></li>\r\n    //     <li><a href=\"../c3.html\">(A2 | B1)</a></li>\r\n    //     <li><a href=\"../c4.html\">(A2 | B3)</a></li>\r\n    //     <li><a href=\"../c5.html\">(A3 | B1)</a></li>\r\n    //     <li><a href=\"../c6.html\">(A3 | B2)</a></li>\r\n    //     <li><a href=\"../c7.html\">(A3 | B3)</a></li>\r\n    //   </ul>\r\n    // </div>\r\n\r\n    /**\r\n     * First of all, we need to generate a Dictionary of the available options. For example, the mapping table of the single azure selector should be like:\r\n     * {\r\n     *     A1: { default: \"../a1.html\" },\r\n     *     A2: { default: \"../a2.html\" },\r\n     *     A3: { default: \"../a3.html\" }\r\n     * }\r\n     * But the mapping table for the double azure selectors would be a little bit compilicated:\r\n     * {\r\n     *     A1: {\r\n     *         B1: \"../c1.html\",\r\n     *         B2: \"../c2.html\"\r\n     *     }\r\n     *     A2: {\r\n     *         B1: \"../c3.html\",\r\n     *         B3: \"../c4.html\"\r\n     *     },\r\n     *     A3: {\r\n     *         B1: \"../c5.html\",\r\n     *         B2: \"../c6.html\",\r\n     *         B3: \"../c7.html\"\r\n     *     }\r\n     * }\r\n     */\r\n    function generateOptionsMap(selectorDivElement, isSingleSelector) {\r\n        var optionsMap = {};\r\n        mainframe.getAzureSelectorAnchors(selectorDivElement).each(function () {\r\n            if ($(this) && $(this).text()) {\r\n                var contents = (isSingleSelector ? [$(this).text(), \"default\"] : $(this).text().trim().slice(1, -1).split(\"|\"));\r\n                if (contents.length === 2) {\r\n                    var firstOption = contents[0].trim();\r\n                    var secondOption = contents[1].trim();\r\n                    var targetLink = $(this).attr(\"href\");\r\n                    if (firstOption && secondOption && targetLink) {\r\n                        if (!optionsMap[firstOption]) {\r\n                            optionsMap[firstOption] = {};\r\n                        }\r\n                        optionsMap[firstOption][secondOption] = targetLink;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return optionsMap;\r\n    }\r\n\r\n    function removeQueryString(path){\r\n        if(path && path.length){\r\n            var index = path.indexOf('?');\r\n            if(index > 0){\r\n                path = path.substring(0, index);\r\n            }\r\n        }\r\n        return path;\r\n\t}\r\n    /**\r\n     * Get the current selected options from the optionsMap and return a two-element tuple. For the single selector, the second option is always \"default\".\r\n     */\r\n    function getCurrentSelectedOptions(optionsMap, isSingleSelector) {\r\n        var browserUrlString = window.location.href.toLowerCase();\r\n        for (var mainOptionValue in optionsMap) {\r\n            for (var secondaryOptionValue in optionsMap[mainOptionValue]) {\r\n                var targetUrlString = optionsMap[mainOptionValue][secondaryOptionValue].toLowerCase();\r\n                var target = removeQueryString(targetUrlString);\r\n                var browser = removeQueryString(browserUrlString);\r\n                if (URI(target, browser).equals(browser)) {\r\n                    return [mainOptionValue, secondaryOptionValue];\r\n                }\r\n            }\r\n        }\r\n        return [null, null];\r\n    }\r\n\r\n\r\n    /**\r\n     * Next, one or two dropdowns are need to be created according to the generated optionsMap. The dropdowns are differentiate by main and secondary.\r\n     * The secondary dropdown's availble options will always be populated according to the main dropdown's current selection (If no item is selected, just\r\n     * make the secondary dropdown's availble options to empty).\r\n     */\r\n    function createDropdowns(selectorDivElement, isSingleSelector, defaultOption) {\r\n\r\n        function dropdownItemTemplate(key) { return [key, key]; }\r\n        function jumpToUrl(targetUrl) { window.location.href = targetUrl; }\r\n\r\n        var optionsMap = generateOptionsMap(selectorDivElement, isSingleSelector);\r\n        var selectedOptions = getCurrentSelectedOptions(optionsMap, isSingleSelector);\r\n\r\n        var container = mainframe.createAzureSelectorsContainer();\r\n        var firstDropdown = mainframe.createAzureSelectorDropdown(container, selectorDivElement.attr(\"title1\"));\r\n        var secondDropdown = null;\r\n        mainframe.populateDropdownOptions(firstDropdown, optionsMap, dropdownItemTemplate, false, defaultOption);\r\n        firstDropdown.val(selectedOptions[0]);\r\n        if (!isSingleSelector) {\r\n            secondDropdown = mainframe.createAzureSelectorDropdown(container, selectorDivElement.attr(\"title2\"));\r\n            firstDropdown.change(function () {\r\n                mainframe.populateDropdownOptions(secondDropdown, firstDropdown.val() ? optionsMap[firstDropdown.val()] : {}, dropdownItemTemplate, false, defaultOption);\r\n            });\r\n            secondDropdown.change(function () {\r\n                if (firstDropdown.val() && secondDropdown.val()) {\r\n                    jumpToUrl(optionsMap[firstDropdown.val()][secondDropdown.val()]);\r\n                }\r\n            });\r\n            firstDropdown.change();\r\n            secondDropdown.val(selectedOptions[1]);\r\n        } else {\r\n            firstDropdown.change(function () {\r\n                if (firstDropdown.val()) {\r\n                    jumpToUrl(optionsMap[firstDropdown.val()][\"default\"]);\r\n                }\r\n            });\r\n        }\r\n\r\n        selectorDivElement.replaceWith(container);\r\n    }\r\n\r\n    /**\r\n     * This function will convert both the Azure Single Selector as well as the Azure Double Selector HTMLs to the corresponding dropdown within the text.\r\n     * @returns void\r\n     */\r\n    function renderAzureSelectors() {\r\n        var locFile = require('locFile');\r\n        \r\n        locFile.loadUHFFile(function(uhf) {\r\n\r\n            var sharedLocString = JSON.parse(uhf.find('sharedLocJson').text());\r\n            var defaultOption = sharedLocString['null.option.description'];\r\n\r\n            mainframe.getSingleAzureSelectors().each(function () { createDropdowns($(this), true, defaultOption); });\r\n            mainframe.getDoubleAzureSelectors().each(function () { createDropdowns($(this), false, defaultOption); });\r\n        });\r\n    }\r\n\r\n    return {\r\n        renderAzureSelectors: renderAzureSelectors\r\n    };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/docs.azureselector.js\n ** module id = 41\n ** module chunks = 4 12\n **/","/**\r\n * The Branch Selector component of the DOCS website\r\n *\r\n * Dependencies:\r\n *     - cookies: Read and write cookies to the website\r\n *     - urijs: Parse and append query string to the current URL\r\n *     - docs.mainframe: Construct/Manipulate selector DOM elements\r\n */\r\ndefine([\"cookies\", \"urijs\", \"docs.utilities\",  \"docs.mainframe\"], function(cookies, URI, utilities, mainframe) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Cookies[\"AUTHENTICATION_INFORMATION\"] = \"IsAuthenticated%3Dtrue\"\r\n     */\r\n    function isInTestEnvironment() {\r\n        var authenticationInfo = cookies.getCookie(\"AUTHENTICATION_INFORMATION\");\r\n        if (!authenticationInfo) {\r\n            return false;\r\n        }\r\n        var authenticationFields = authenticationInfo.split(\";\");\r\n        if (!authenticationFields || !authenticationFields.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < authenticationFields.length; i++) {\r\n            if (!authenticationFields[i]) {\r\n                return false;\r\n            }\r\n            var authKeyValuePair = authenticationFields[i].split(\"=\");\r\n            if (!authKeyValuePair || authKeyValuePair.length !== 2) {\r\n                return false;\r\n            }\r\n            if (authKeyValuePair[0].trim().toLowerCase() === \"isauthenticated\") {\r\n                return authKeyValuePair[1].trim().toLowerCase() === \"true\";\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getAvailableBranchesAsync() {\r\n        try {\r\n            var windowUrl = URI(window.location.href);\r\n            var baseUrlString = URI(window.location.href).origin();\r\n            var apiUrlString = \"/_api/branches?docPath=\" + encodeURIComponent(windowUrl.pathname());\r\n            var apiUrl = URI(apiUrlString, baseUrlString);\r\n            return utilities.loadJsonFileAsync(apiUrl.toString());\r\n        } catch (err) {\r\n            return $.when(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders the branch selector if it is in the DEVINT or SANBOX environment.\r\n     * @returns {JQueryPromise} An async operation which represents the process of contructing the branch selector\r\n     */\r\n    function renderBranchSelectorAsync() {\r\n        if (!isInTestEnvironment()) {\r\n            return $.when();\r\n        }\r\n\r\n        $('#contenteditbtn').removeAttr('hidden');\r\n\r\n        return getAvailableBranchesAsync().done(function (branches) {\r\n            if (branches && branches.length) {\r\n                branches.sort();\r\n                var dropdown = mainframe.createBranchSelectorDropdown(branches);\r\n                dropdown.change(function () {\r\n                    var targetBranchName = dropdown.val();\r\n                    if (targetBranchName) {\r\n                        cookies.setCookie(\"CONTENT_BRANCH\", targetBranchName);\r\n                        window.location.href = URI(window.location.href).search(\"branch=\" + targetBranchName).toString();\r\n                    }\r\n                });\r\n                dropdown.val(cookies.getCookie(\"CONTENT_BRANCH\"));\r\n                var wrapper = $(\"<li></li>\");\r\n                var label = $(\"<label for=\\\"branch-selector\\\">Branch</label>\");\r\n                wrapper.append(label);\r\n                wrapper.append(dropdown);\r\n                mainframe.appendToActionList(wrapper);\r\n            }\r\n        });\r\n    }\r\n\r\n    return {\r\n        renderBranchSelectorAsync: renderBranchSelectorAsync\r\n    };\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/docs.branchselector.js\n ** module id = 42\n ** module chunks = 4 12 14 16\n **/","define([\"docs.metadata\", \"locale\"], function (metadata, locale) {\r\n    \"use strict\";\r\n    // connect to int by default.\r\n    var environment = \"int\";\r\n    if (location.hostname === \"docs.microsoft.com\") {\r\n        //only connect to prod when it's docs production environment.\r\n        environment = \"prod\";\r\n    }\r\n    var openFeedbackOptions = {\r\n        environment: environment,\r\n        containerElementId: \"openFeedbackContainer\",\r\n        siteNameMetaName: \"site_name\",\r\n        documentMetaName: \"document_id\",\r\n        localeMetaName: \"locale\", // content locale\r\n        uiLocale: locale.getLanguageFromUrl(), // user preferred locale specified in url\r\n        responsiveRule: \"(min-width: 1024px)\"\r\n    };\r\n\r\n    // USER STORY 558937: Send both document_id and ms.assetid when call rating service API\r\n    if (metadata.get(\"ms.assetid\")) {\r\n        openFeedbackOptions.propertyBag = {\r\n            \"ms.assetid\": metadata.get(\"ms.assetid\")\r\n        };\r\n    }\r\n    // load openfeedback\r\n    window.openFeedbackOptions = openFeedbackOptions;\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/rating.js\n ** module id = 44\n ** module chunks = 4 12 14 16\n **/","define(function () {\r\n    \"use strict\";\r\n\r\n    /* jshint ignore:start */\r\n    (function(e,t,c,n){var o,s,a;e.SMCX=e.SMCX||[],t.getElementById(n)||(o=t.getElementsByTagName(c),s=o[o.length-1],a=t.createElement(c),a.type=\"text/javascript\",a.async=!0,a.id=n,a.src=[\"https:\"===location.protocol?\"https://\":\"http://\",\"widget.surveymonkey.com/collect/website/js/79yNbHm5_2Bc09cabC381UfD6Mz_2FuWCiepbBF6EB_2FT0Ea4MCk82Bh_2BApaijjR77BSR.js\"].join(\"\"),s.parentNode.insertBefore(a,s))})(window,document,\"script\",\"smcx-sdk\");\r\n    /* jshint ignore:end */\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/survey.js\n ** module id = 45\n ** module chunks = 4 9 12 14 16\n **/","define([\"docs.metadata\"], function (metadata) {\r\n    \"use strict\";\r\n    var bilingualType = metadata.get('bilingual_type');\r\n    if (bilingualType && bilingualType === 'hover over') {\r\n        require([\"locale\", \"util\", \"bootstrap\"], function (locale, util) {\r\n            var uiLocale = locale.getLanguageFromUrl(); // user preferred locale specified in url\r\n            var bilingualUrl = '//oljscdn.azureedge.net/js/popover.' + uiLocale + '.min.js';\r\n            var translationType = metadata.get('translation_type');\r\n\r\n            window.OL = window.OL || {};\r\n            window.OL.options = window.OL.options || {};\r\n            window.OL.options.translation_type = translationType || '';\r\n            window.OL.options.is_beta = false;\r\n            window.OL.options.disclaimer_container = \"#main\";\r\n            window.OL.options.selector = \"#main\";\r\n            window.OL.options.tenant = \"OL\";\r\n            window.OL.options.skip = \"div.metadata\";\r\n\r\n            util.loadLibrary(bilingualUrl);\r\n        });\r\n    }\r\n}); \r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/bilingual.js\n ** module id = 46\n ** module chunks = 4 12 14\n **/"],"sourceRoot":""}